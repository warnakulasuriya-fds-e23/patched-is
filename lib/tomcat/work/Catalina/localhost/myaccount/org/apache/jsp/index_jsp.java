/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-07-07 06:09:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.wso2.carbon.base.ServerConfiguration;
import static org.wso2.carbon.identity.core.util.IdentityCoreConstants.PROXY_CONTEXT_PATH;
import static org.wso2.carbon.identity.core.util.IdentityUtil.getServerURL;
import org.owasp.encoder.Encode;
import static org.wso2.carbon.identity.core.util.IdentityTenantUtil.isSuperTenantRequiredInUrl;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("static org.wso2.carbon.identity.core.util.IdentityTenantUtil.isSuperTenantRequiredInUrl");
    _jspx_imports_classes.add("org.owasp.encoder.Encode");
    _jspx_imports_classes.add("static org.wso2.carbon.identity.core.util.IdentityCoreConstants.PROXY_CONTEXT_PATH");
    _jspx_imports_classes.add("static org.wso2.carbon.identity.core.util.IdentityUtil.getServerURL");
    _jspx_imports_classes.add("org.wso2.carbon.base.ServerConfiguration");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\n");
      out.write("~    Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n");
      out.write("~\n");
      out.write("~    This software is the property of WSO2 Inc. and its suppliers, if any.\n");
      out.write("~    Dissemination of any information or reproduction of any material contained\n");
      out.write("~    herein in any form is strictly forbidden, unless permitted by WSO2 expressly.\n");
      out.write("~    You may not alter or remove any copyright or other notice from copies of this content.\"\n");
      out.write("-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    var userAccessedPath = window.location.href;\n");
      out.write("    sessionStorage.setItem(\"auth_callback_url_my_account\", userAccessedPath.split(window.origin)[1]);\n");
      out.write("    sessionStorage.setItem(\"userAccessedPath\", userAccessedPath.split(window.origin)[1]);\n");
      out.write("</script>\n");
      out.write("\n");

    if(request.getParameter("code") != null && !request.getParameter("code").trim().isEmpty()) {request.getRequestDispatcher("/authenticate?code="+request.getParameter("code")+"&AuthenticatedIdPs="+request.getParameter("AuthenticatedIdPs")+"&session_state="+request.getParameter("session_state")).forward(request, response);}

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <style>\n");
      out.write("            #trifacta-pre-loader {\n");
      out.write("                display: none;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            #default-pre-loader {\n");
      out.write("                display: none;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            body {\n");
      out.write("                margin: 0;\n");
      out.write("                padding: 0;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            @keyframes alert-success {\n");
      out.write("                0% {\n");
      out.write("                    opacity: 1;\n");
      out.write("                }\n");
      out.write("                100% {\n");
      out.write("                    opacity: 0;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .pre-loader-wrapper {\n");
      out.write("                background-color: #F5F6F6;\n");
      out.write("                min-height: 100vh;\n");
      out.write("                align-items: center;\n");
      out.write("                justify-content: center;\n");
      out.write("                display: flex;\n");
      out.write("                flex-direction: column;\n");
      out.write("                flex: 1;\n");
      out.write("                background-image: unset;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .pre-loader-logo {\n");
      out.write("                margin-top: -0.1rem;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .content-loader {\n");
      out.write("                display: flex;\n");
      out.write("                flex-direction: column;\n");
      out.write("                justify-content: center;\n");
      out.write("                align-items: center;\n");
      out.write("                user-select: none;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .content-loader .ui.loader {\n");
      out.write("                display: block;\n");
      out.write("                position: relative;\n");
      out.write("                margin-top: 10px;\n");
      out.write("                margin-bottom: 25px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            @keyframes loader {\n");
      out.write("                0% {\n");
      out.write("                    transform: rotate(0)\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                to {\n");
      out.write("                    transform: rotate(1turn)\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .content-loader .ui.loader:before {\n");
      out.write("                content: \"\";\n");
      out.write("                display: block;\n");
      out.write("                height: 26px;\n");
      out.write("                width: 26px;\n");
      out.write("                border: .2em solid rgba(0,0,0,.1);\n");
      out.write("                border-radius: 500rem;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .content-loader .ui.loader:after {\n");
      out.write("                content: \"\";\n");
      out.write("                position: absolute;\n");
      out.write("                height: 26px;\n");
      out.write("                width: 26px;\n");
      out.write("                border-color: #767676 transparent transparent !important;\n");
      out.write("                border: .2em solid transparent;\n");
      out.write("                animation: loader .6s linear;\n");
      out.write("                animation-iteration-count: infinite;\n");
      out.write("                border-radius: 500rem;\n");
      out.write("                box-shadow: 0 0 0 1px transparent;\n");
      out.write("                top: 0;\n");
      out.write("                left: 0;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .trifacta-pre-loader  {\n");
      out.write("                margin-top: -0.1rem;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .trifacta-pre-loader svg #_1 {\n");
      out.write("                animation-name: alert-success;\n");
      out.write("                animation-duration: 3s;\n");
      out.write("                position: relative;\n");
      out.write("                animation-delay: 0s;\n");
      out.write("                animation-iteration-count: infinite;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .trifacta-pre-loader svg #_2 {\n");
      out.write("                animation-name: alert-success;\n");
      out.write("                animation-duration: 3s;\n");
      out.write("                position: relative;\n");
      out.write("                animation-delay: 1s;\n");
      out.write("                animation-iteration-count: infinite;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .trifacta-pre-loader svg #_3 {\n");
      out.write("                animation-name: alert-success;\n");
      out.write("                animation-duration: 3s;\n");
      out.write("                position: relative;\n");
      out.write("                animation-delay: 2s;\n");
      out.write("                animation-iteration-count: infinite;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("        <script src=\"/myaccount/startup-config.js\"></script>\n");
      out.write("        <script>\n");
      out.write("            var userAccessedPath = window.location.href;\n");
      out.write("            var userTenant = userAccessedPath.split(\"/\" + startupConfig.tenantPrefix + \"/\")[1] ?  userAccessedPath.split(\"/\" + startupConfig.tenantPrefix + \"/\")[1].split(\"/\")[0] : null;\n");
      out.write("            userTenant = userTenant ?  userTenant.split(\"?\")[0] : null;\n");
      out.write("\n");
      out.write("            function preLoaderResolver() {\n");
      out.write("                var trifactaPreLoader = document.getElementById(\"trifacta-pre-loader\");\n");
      out.write("                var defaultPreLoader = document.getElementById(\"default-pre-loader\");\n");
      out.write("                var loader = document.getElementById(\"loader\");\n");
      out.write("\n");
      out.write("                if (userTenant && userTenant == startupConfig.superTenantProxy) {\n");
      out.write("                    if (startupConfig.enableDefaultPreLoader) {\n");
      out.write("                        defaultPreLoader.style.display = 'block';\n");
      out.write("                        trifactaPreLoader.style.display = 'none';\n");
      out.write("                    } else {\n");
      out.write("                        defaultPreLoader.style.display = 'none';\n");
      out.write("                        trifactaPreLoader.style.display = 'block';\n");
      out.write("                        loader.style.display = 'none';\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            };\n");
      out.write("        </script>\n");
      out.write("        <script>\n");
      out.write("            // Handles myaccount tenanted signout before auth sdk get loaded\n");
      out.write("            var applicationDomain = window.location.origin;\n");
      out.write("\n");
      out.write("            var serverOrigin = \"");
      out.print(getServerURL("", true, true));
      out.write("\";\n");
      out.write("            var authorizationCode = \"");
      out.print(Encode.forHtml(request.getParameter("code")));
      out.write("\" != \"null\"\n");
      out.write("                ? \"");
      out.print(Encode.forHtml(request.getParameter("code")));
      out.write("\"\n");
      out.write("                : null;\n");
      out.write("            var authSessionState = \"");
      out.print(Encode.forHtml(request.getParameter("session_state")));
      out.write("\" != \"null\"\n");
      out.write("                ? \"");
      out.print(Encode.forHtml(request.getParameter("session_state")));
      out.write("\"\n");
      out.write("                : null;\n");
      out.write("            var authIdPs = \"");
      out.print(request.getParameter("AuthenticatedIdPs"));
      out.write("\" != \"null\"\n");
      out.write("                ? \"");
      out.print(request.getParameter("AuthenticatedIdPs"));
      out.write("\"\n");
      out.write("                : null;\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("        <!-- Start of custom stylesheets -->\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"/myaccount/extensions/stylesheet.css\"/>\n");
      out.write("        <!-- End of custom stylesheets -->\n");
      out.write("\n");
      out.write("        <!-- Start of custom scripts added to the head -->\n");
      out.write("        <script type=\"text/javascript\" src=\"/myaccount/extensions/head-script.js\"></script>\n");
      out.write("        <!-- End of custom scripts added to the head -->\n");
      out.write("    </head>\n");
      out.write("    <script>\n");
      out.write("        var proxyContextPathGlobal = \"");
      out.print(ServerConfiguration.getInstance().getFirstProperty(PROXY_CONTEXT_PATH));
      out.write("\";\n");
      out.write("        var isSuperTenantRequiredInUrl = \"");
      out.print(isSuperTenantRequiredInUrl());
      out.write("\";\n");
      out.write("\n");
      out.write("        function authenticateWithSDK() {\n");
      out.write("\n");
      out.write("            if(!authorizationCode) {\n");
      out.write("                function getTenantName() {\n");
      out.write("                    var path = window.location.pathname;\n");
      out.write("                    var pathChunks = path.split(\"/\");\n");
      out.write("                    var tenantPrefixIndex = pathChunks.indexOf(startupConfig.tenantPrefix);\n");
      out.write("                    if (tenantPrefixIndex !== -1) {\n");
      out.write("                        return pathChunks[ tenantPrefixIndex + 1 ];\n");
      out.write("                    }\n");
      out.write("                    return \"\";\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                function getTenantPath(tenantDomain) {\n");
      out.write("                    var _tenantDomain = tenantDomain ? tenantDomain : getTenantName();\n");
      out.write("                    \n");
      out.write("                    if (!_tenantDomain && isSuperTenantRequiredInUrl === \"true\") {\n");
      out.write("                        if (startupConfig.superTenantProxy) {\n");
      out.write("                            _tenantDomain = startupConfig.superTenantProxy;\n");
      out.write("                        } else {\n");
      out.write("                            _tenantDomain = startupConfig.superTenant;\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    return _tenantDomain !== \"\"\n");
      out.write("                        ? \"/\" + startupConfig.tenantPrefix + \"/\" + _tenantDomain\n");
      out.write("                        : \"\";\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                function getApiPath(path) {\n");
      out.write("                    var tenantDomain = getTenantName();\n");
      out.write("\n");
      out.write("                    if (!tenantDomain) {\n");
      out.write("                        if (startupConfig.superTenantProxy) {\n");
      out.write("                            tenantDomain = startupConfig.superTenantProxy;\n");
      out.write("                        } else {\n");
      out.write("                            tenantDomain = startupConfig.superTenant;\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    if (path) {\n");
      out.write("                        return serverOrigin + getTenantPath(tenantDomain) + path;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    return serverOrigin + getTenantPath(tenantDomain);\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                /**\n");
      out.write("                 * Construct the sign-in redirect URL.\n");
      out.write("                 *\n");
      out.write("                 * @returns {string} Contructed URL.\n");
      out.write("                 */\n");
      out.write("                 function signInRedirectURL() {\n");
      out.write("                    // When there's no proxy context path, the IS server returns \"null\".\n");
      out.write("                    var contextPath = (!proxyContextPathGlobal || proxyContextPathGlobal === \"null\") ? \"\" : \"/\" + proxyContextPathGlobal;\n");
      out.write("\n");
      out.write("                    if (getTenantName() === startupConfig.superTenant && isSuperTenantRequiredInUrl !== \"true\") {\n");
      out.write("                        return applicationDomain.replace(/\\/+$/, '') + contextPath\n");
      out.write("                             + \"/myaccount\";\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    return applicationDomain.replace(/\\/+$/, '') + contextPath + getTenantPath()\n");
      out.write("                         + \"/myaccount\";\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                /**\n");
      out.write("                 * Construct the sign-out redirect URL.\n");
      out.write("                 *\n");
      out.write("                 * @returns {string} Contructed URL.\n");
      out.write("                 */\n");
      out.write("                function getSignOutRedirectURL() {\n");
      out.write("                    if (getTenantName() === startupConfig.superTenant && isSuperTenantRequiredInUrl !== \"true\") {\n");
      out.write("                        return applicationDomain.replace(/\\/+$/, '');\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    return applicationDomain.replace(/\\/+$/, '') + getTenantPath();\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                /**\n");
      out.write("                 * Get the organization name.\n");
      out.write("                 *\n");
      out.write("                 * @returns {string}\n");
      out.write("                 */\n");
      out.write("                function getOrganizationName() {\n");
      out.write("                    var path = window.location.pathname;\n");
      out.write("                    var pathChunks = path.split(\"/\");\n");
      out.write("\n");
      out.write("                    var orgPrefixIndex = pathChunks.indexOf(startupConfig.orgPrefix);\n");
      out.write("\n");
      out.write("                    if (orgPrefixIndex !== -1) {\n");
      out.write("                        return pathChunks[ orgPrefixIndex + 1 ];\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    return \"\";\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                /**\n");
      out.write("                 * Get the organization path.\n");
      out.write("                 *\n");
      out.write("                 * @returns {string}\n");
      out.write("                 */\n");
      out.write("                function getOrganizationPath() {\n");
      out.write("                    return getOrganizationName() !== \"\"\n");
      out.write("                        ? \"/\" + startupConfig.orgPrefix + \"/\" + getOrganizationName()\n");
      out.write("                        : \"\";\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                /**\n");
      out.write("                 * Construct the auth params for organization login `authorize` requets.\n");
      out.write("                 *\n");
      out.write("                 * @remarks This only applies to the new authz runtime.\n");
      out.write("                 *\n");
      out.write("                 * @params originalParams - Original auth params.\n");
      out.write("                 * @returns {string} Contructed auth params.\n");
      out.write("                 */\n");
      out.write("                function getAuthParamsForOrganizationLogins(originalParams) {\n");
      out.write("                    var authParams = Object.assign({}, originalParams);\n");
      out.write("\n");
      out.write("                    if (getOrganizationPath()) {\n");
      out.write("                        var initialUserOrgInLocalStorage = localStorage.getItem(\"user-org\");\n");
      out.write("                        var orgIdInLocalStorage = localStorage.getItem(\"org-id\");\n");
      out.write("\n");
      out.write("                        if (orgIdInLocalStorage) {\n");
      out.write("                            if (orgIdInLocalStorage === getOrganizationName() && initialUserOrgInLocalStorage !== \"undefined\") {\n");
      out.write("                                authParams[\"fidp\"] = \"OrganizationSSO\";\n");
      out.write("                                authParams[\"orgId\"] = getOrganizationName();\n");
      out.write("                            }\n");
      out.write("                        } else {\n");
      out.write("                            authParams[\"fidp\"] = \"OrganizationSSO\";\n");
      out.write("                            authParams[\"orgId\"] = getOrganizationName();\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    return authParams;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                /**\n");
      out.write("                 * Retrieves the super tenant.\n");
      out.write("                 * If a super tenant proxy is defined in the startup configuration, it is returned;\n");
      out.write("                 * otherwise, the super tenant directly from the startup configuration is returned.\n");
      out.write("                 *\n");
      out.write("                 * @returns {string} The super tenant.\n");
      out.write("                 */\n");
      out.write("                function getSuperTenant() {\n");
      out.write("                    if (startupConfig.superTenantProxy) {\n");
      out.write("                        return startupConfig.superTenantProxy;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    startupConfig.superTenant;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                var auth = AsgardeoAuth.AsgardeoSPAClient.getInstance();\n");
      out.write("\n");
      out.write("                var authConfig = {\n");
      out.write("                    signInRedirectURL: signInRedirectURL(),\n");
      out.write("                    signOutRedirectURL: getSignOutRedirectURL(),\n");
      out.write("                    clientID: \"MY_ACCOUNT\",\n");
      out.write("                    baseUrl: getApiPath(),\n");
      out.write("                    responseMode: \"form_post\",\n");
      out.write("                    scope: [\"openid SYSTEM\"],\n");
      out.write("                    storage: \"webWorker\",\n");
      out.write("                    endpoints: {\n");
      out.write("                        authorizationEndpoint: getApiPath(\"/oauth2/authorize\"),\n");
      out.write("                        clockTolerance: 300,\n");
      out.write("                        jwksEndpointURL: undefined,\n");
      out.write("                        logoutEndpointURL: getApiPath(\"/oidc/logout\"),\n");
      out.write("                        oidcSessionIFrameEndpointURL: getApiPath(\"/oidc/checksession\"),\n");
      out.write("                        tokenEndpointURL: undefined,\n");
      out.write("                        tokenRevocationEndpointURL: undefined,\n");
      out.write("                    },\n");
      out.write("                    enablePKCE: true\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                auth.initialize(authConfig);\n");
      out.write("                auth.signIn(getAuthParamsForOrganizationLogins({}));\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("    <script>\n");
      out.write("        if (!authorizationCode) {\n");
      out.write("            var authSPAJS = document.createElement(\"script\");\n");
      out.write("            var authScriptSrc = \"/myaccount/auth-spa-3.1.2.min.js\";\n");
      out.write("\n");
      out.write("            authSPAJS.setAttribute(\"src\", authScriptSrc);\n");
      out.write("            authSPAJS.setAttribute(\"async\", \"false\");\n");
      out.write("\n");
      out.write("            var head = document.head;\n");
      out.write("            head.insertBefore(authSPAJS, head.firstElementChild);\n");
      out.write("\n");
      out.write("            authSPAJS.addEventListener(\"load\", authenticateWithSDK, false);\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("    <body onload=\"preLoaderResolver()\">\n");
      out.write("        <div class=\"pre-loader-wrapper\" data-testid=\"preauth-pre-loader-wrapper\">\n");
      out.write("            <div class=\"trifacta-pre-loader\" data-testid=\"preauth-pre-loader\" id=\"trifacta-pre-loader\">\n");
      out.write("                <svg data-testid=\"preauth-pre-loader-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"67.56\" height=\"58.476\"\n");
      out.write("                     viewBox=\"0 0 67.56 58.476\">\n");
      out.write("                    <g id=\"logo-only\" transform=\"translate(-424.967 -306)\">\n");
      out.write("                        <path id=\"_3\" data-name=\"3\"\n");
      out.write("                              d=\"M734.291,388.98l6.194,10.752-6.868,11.907h13.737l6.226,10.751H714.97Z\"\n");
      out.write("                              transform=\"translate(-261.054 -82.98)\" fill=\"#ff7300\"/>\n");
      out.write("                        <path id=\"_2\" data-name=\"2\"\n");
      out.write("                              d=\"M705.95,422.391l6.227-10.751h13.736l-6.867-11.907,6.193-10.752,19.321,33.411Z\"\n");
      out.write("                              transform=\"translate(-280.983 -82.98)\" fill=\"#ff7300\"/>\n");
      out.write("                        <path id=\"_1\" data-name=\"1\"\n");
      out.write("                              d=\"M736.65,430.2l-6.868-11.907-6.9,11.907H710.46l19.322-33.411L749.071,430.2Z\"\n");
      out.write("                              transform=\"translate(-271.019 -65.725)\" fill=\"#000\"/>\n");
      out.write("                    </g>\n");
      out.write("                </svg>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"pre-loader-logo\" id=\"default-pre-loader\">\n");
      out.write("                <svg class=\"icon\" id=\"is-logo\" xmlns=\"http://www.w3.org/2000/svg\" width=\"255.16\" height=\"23.057\" viewBox=\"0 0 255.16 23.057\">\n");
      out.write("                    <g id=\"logo-full\" transform=\"translate(-804.154 2199)\">\n");
      out.write("                        <g id=\"wso2-logo\" transform=\"translate(804.154 -2199)\">\n");
      out.write("                            <circle id=\"Ellipse_1\" data-name=\"Ellipse 1\" cx=\"7.251\" cy=\"7.251\" r=\"7.251\" transform=\"translate(37.029 1.785)\" fill=\"#f47b20\"/>\n");
      out.write("                            <path id=\"Path_326\" data-name=\"Path 326\" d=\"M87.913,2.7,87.9,2.6H85.089l-.029.053q-.5.89-1,1.785l-.29.522q-.752-1.82-1.5-3.64Q81.489-.6,80.7-2.52L80.6-2.742l-.1.219Q79.934-1.266,79.371,0c-.517,1.154-1.052,2.346-1.589,3.514-.748-.007-1.5-.006-2.248-.005-.687,0-1.375,0-2.065,0h-.107l0,.107a5.277,5.277,0,0,0,.069.685l.018.123h.09q1.792,0,3.581,0h1.261l.028-.061q.551-1.216,1.1-2.437Q80.036.744,80.567-.427q.8,1.942,1.6,3.888.7,1.7,1.4,3.4l.082.2.106-.187q.721-1.283,1.434-2.571l.44-.793h2.286l.008-.1A4.451,4.451,0,0,0,87.913,2.7Z\" transform=\"translate(-36.353 5.993)\" fill=\"#fff\"/>\n");
      out.write("                            <path id=\"Path_327\" data-name=\"Path 327\" d=\"M29-6.615c.708,0,1.415,0,2.123,0q2.584,6.36,5.171,12.72c1.726-4.249,3.439-8.5,5.183-12.746q2.587,6.376,5.177,12.75Q49.242-.251,51.825-6.616c.715,0,1.432,0,2.147,0Q50.363,2.3,46.748,11.208c-.007.086-.131.228-.16.062Q44.033,4.947,41.476-1.375c-1.739,4.264-3.456,8.537-5.186,12.8Q32.638,2.411,29-6.615Z\" transform=\"translate(-29 6.639)\" fill=\"#f47b20\"/>\n");
      out.write("                            <path id=\"Path_328\" data-name=\"Path 328\" d=\"M60.18-5.7a5.7,5.7,0,0,1,3.964-.873,5.112,5.112,0,0,1,3.64,2.68c-.516.34-1.043.662-1.556,1.005-.274-.3-.459-.669-.745-.959A2.671,2.671,0,0,0,64.057-4.7a3.344,3.344,0,0,0-3.115.9A2.29,2.29,0,0,0,61.1-.526,17.566,17.566,0,0,0,63.336.8,18.118,18.118,0,0,1,66.2,2.288a5.372,5.372,0,0,1,1.669,1.541,4.85,4.85,0,0,1,.448,3.249,5.318,5.318,0,0,1-2.4,3.5,5.655,5.655,0,0,1-3.672.808,5.077,5.077,0,0,1-3.127-1.355,6.083,6.083,0,0,1-1.656-3.1c.637-.2,1.273-.386,1.909-.582a4.539,4.539,0,0,0,1.492,2.6,3.485,3.485,0,0,0,2.8.567,3.415,3.415,0,0,0,2.512-2.064A3.52,3.52,0,0,0,66.3,5.236a2.218,2.218,0,0,0-.927-1.2,19.509,19.509,0,0,0-2.824-1.559,14,14,0,0,1-2.172-1.2A4.951,4.951,0,0,1,58.9-.063a4.223,4.223,0,0,1-.445-3.085A4.137,4.137,0,0,1,60.18-5.7Z\" transform=\"translate(-33.716 6.635)\" fill=\"#f47b20\"/>\n");
      out.write("                            <path id=\"Path_329\" data-name=\"Path 329\" d=\"M79.612-6.6a9.091,9.091,0,0,1,4.272.721,9.016,9.016,0,0,1,4.4,12.472,9.051,9.051,0,0,1-6.125,4.627A9.113,9.113,0,0,1,77.01,10.8a9.03,9.03,0,0,1-3.971-3.018,8.942,8.942,0,0,1-1.775-4.929,8.955,8.955,0,0,1,1.83-5.927A9.029,9.029,0,0,1,79.612-6.6ZM78.53-4.557A7.208,7.208,0,0,0,73.951-.982,7.517,7.517,0,0,0,73.1,2.965h.02a5.439,5.439,0,0,0,.073.706,7.226,7.226,0,0,0,3.979,5.258,7.174,7.174,0,0,0,5.383.341,7.215,7.215,0,0,0,3.629-2.715,7.158,7.158,0,0,0,1.283-3.793,4.191,4.191,0,0,0-.008-.7,7.2,7.2,0,0,0-5.141-6.54A7.148,7.148,0,0,0,78.53-4.557Z\" transform=\"translate(-36.002 6.636)\" fill=\"#060709\"/>\n");
      out.write("                            <path id=\"Path_330\" data-name=\"Path 330\" d=\"M92.939,3.408a5.359,5.359,0,0,1,2.9.013A4.314,4.314,0,0,1,98.609,6.11a4.743,4.743,0,0,1-.481,3.96,18.24,18.24,0,0,1-2.091,2.613q-1.828,1.975-3.66,3.948,3.33-.005,6.66,0c0,.474,0,.948,0,1.422-3.289,0-6.579,0-9.868,0,2.1-2.278,4.223-4.538,6.316-6.824a6.8,6.8,0,0,0,1.876-3.037,2.9,2.9,0,0,0-.822-2.66A3.3,3.3,0,0,0,92.9,4.894,8.266,8.266,0,0,0,92.939,3.408Z\" transform=\"translate(-38.972 5.006)\" fill=\"#060709\"/>\n");
      out.write("                        </g>\n");
      out.write("                        <path id=\"identity-server-text\" d=\"M2.061-15.063H4.122V0H2.061ZM13.217-1.743a5.64,5.64,0,0,0,1.7-.215A3.744,3.744,0,0,0,16.868-3.5a6.3,6.3,0,0,0,.872-2.338,8.917,8.917,0,0,0,.154-1.579,7.354,7.354,0,0,0-1.113-4.348A4.11,4.11,0,0,0,13.2-13.31H9.577V-1.743ZM7.526-15.063h6.1a5.751,5.751,0,0,1,4.819,2.2,8.128,8.128,0,0,1,1.528,5.1,10.154,10.154,0,0,1-.9,4.337A5.567,5.567,0,0,1,13.607,0H7.526Zm15.268,0H33.776v1.846H24.784v4.573H33.1V-6.9H24.784v5.106H33.93V0H22.794Zm13.812,0h2.41l7.608,12.2v-12.2h1.938V0H46.276L38.555-12.192V0H36.606Zm26.127,0v1.794H57.658V0H55.586V-13.269H50.511v-1.794Zm2.328,0h2.061V0H65.061Zm16.334,0v1.794H76.32V0H74.249V-13.269H69.173v-1.794Zm.7,0h2.379L88.8-7.824l4.327-7.239h2.389L89.824-6.07V0H87.784V-6.07Zm21.974,10.2a4.116,4.116,0,0,0,.6,2.082,4.01,4.01,0,0,0,3.579,1.5,6.334,6.334,0,0,0,2.092-.328,2.324,2.324,0,0,0,1.825-2.276A1.965,1.965,0,0,0,111.4-5.64a7.765,7.765,0,0,0-2.44-.892l-2.041-.461a9.24,9.24,0,0,1-2.83-.995,3.151,3.151,0,0,1-1.436-2.82,4.342,4.342,0,0,1,1.4-3.333,5.636,5.636,0,0,1,3.979-1.3A6.91,6.91,0,0,1,112.06-14.3a4.126,4.126,0,0,1,1.656,3.656H111.8a3.774,3.774,0,0,0-.656-1.856,3.813,3.813,0,0,0-3.168-1.179,3.665,3.665,0,0,0-2.594.759,2.375,2.375,0,0,0-.79,1.764,1.722,1.722,0,0,0,.923,1.62,13.543,13.543,0,0,0,2.738.82l2.112.482a6.472,6.472,0,0,1,2.358.954,3.571,3.571,0,0,1,1.436,3.066,3.827,3.827,0,0,1-1.82,3.579,8.151,8.151,0,0,1-4.23,1.077,6.325,6.325,0,0,1-4.4-1.436,4.844,4.844,0,0,1-1.559-3.866Zm12.869-10.2h10.982v1.846h-8.993v4.573h8.316V-6.9h-8.316v5.106h9.146V0H116.936Zm20.815,6.9a3.954,3.954,0,0,0,2.271-.574,2.338,2.338,0,0,0,.836-2.071A2.222,2.222,0,0,0,139.689-13a3.82,3.82,0,0,0-1.671-.308h-4.983v5.147Zm-6.757-6.9h6.973a6.954,6.954,0,0,1,2.84.5A3.557,3.557,0,0,1,142.929-11a4,4,0,0,1-.559,2.215A4.038,4.038,0,0,1,140.807-7.4a3.081,3.081,0,0,1,1.328.943,3.388,3.388,0,0,1,.5,1.9l.072,2.02a6.21,6.21,0,0,0,.144,1.282,1.26,1.26,0,0,0,.656.923V0H141a1.882,1.882,0,0,1-.164-.5,9.644,9.644,0,0,1-.1-1.189L140.612-4.2a2.111,2.111,0,0,0-1.1-1.979,4.538,4.538,0,0,0-1.835-.277h-4.645V0h-2.041Zm15.74,0,4.327,12.828,4.276-12.828h2.287L152.127,0h-2.164l-5.486-15.063Zm13.012,0h10.982v1.846h-8.993v4.573h8.316V-6.9h-8.316v5.106h9.146V0H159.746Zm20.815,6.9a3.954,3.954,0,0,0,2.271-.574,2.338,2.338,0,0,0,.836-2.071A2.222,2.222,0,0,0,182.5-13a3.82,3.82,0,0,0-1.671-.308h-4.983v5.147Zm-6.757-6.9h6.973a6.954,6.954,0,0,1,2.84.5A3.557,3.557,0,0,1,185.739-11a4,4,0,0,1-.559,2.215A4.038,4.038,0,0,1,183.617-7.4a3.081,3.081,0,0,1,1.328.943,3.388,3.388,0,0,1,.5,1.9l.072,2.02a6.21,6.21,0,0,0,.144,1.282,1.26,1.26,0,0,0,.656.923V0h-2.5a1.882,1.882,0,0,1-.164-.5,9.644,9.644,0,0,1-.1-1.189L183.422-4.2a2.111,2.111,0,0,0-1.1-1.979,4.538,4.538,0,0,0-1.835-.277h-4.645V0H173.8Z\" transform=\"translate(873 -2181.461)\"/>\n");
      out.write("                    </g>\n");
      out.write("                </svg>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"content-loader\" id=\"loader\">\n");
      out.write("                <div class=\"ui dimmer\">\n");
      out.write("                    <div class=\"ui loader\"></div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Start of custom scripts added to the body -->\n");
      out.write("        <script type=\"text/javascript\" src=\"/myaccount/extensions/body-script.js\"></script>\n");
      out.write("        <!-- End of custom scripts added to the body -->\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
