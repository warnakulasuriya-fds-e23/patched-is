<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
~ Copyright (c) 2019-2025, WSO2 LLC. (http://www.wso2.com).
~
~ WSO2 LLC. licenses this file to you under the Apache License,
~ Version 2.0 (the "License"); you may not use this file except
~ in compliance with the License.
~ You may obtain a copy of the License at
~
~ http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing,
~ software distributed under the License is distributed on an
~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~ KIND, either express or implied.  See the License for the
~ specific language governing permissions and limitations
~ under the License.
 -->

<Server xmlns="http://wso2.org/projects/carbon/carbon.xml" xmlns:svns="http://org.wso2.securevault/configuration">

    <JDBCPersistenceManager>
        <DataSource>
            <!-- Include a data source name (jndiConfigName) from the set of data
                sources defined in master-datasources.xml -->
            <Name>jdbc/WSO2IdentityDB</Name>
        </DataSource>
        <!-- If the identity database is created from another place and if it is
            required to skip schema initialization during the server start up, set the
            following property to "true". -->
        <SkipDBSchemaCreation>false</SkipDBSchemaCreation>
        <SessionDataPersist>
            <Enable>true</Enable>
            <Temporary>true</Temporary>
            <PoolSize>0</PoolSize>
            <SessionDataCleanUp>
                <Enable>false</Enable>
                <CleanUpTimeout>20160</CleanUpTimeout>
                <CleanUpPeriod>1440</CleanUpPeriod>
                <DeleteChunkSize>8192</DeleteChunkSize>
            </SessionDataCleanUp>
            <OperationDataCleanUp>
                <Enable>false</Enable>
            </OperationDataCleanUp>
            <TempDataCleanup>
                <Enable>true</Enable>
                <!-- When PoolZize > 0, temporary data which have no usage after the authentication flow will be deleted immediately
                 When PoolZise = 0, data will be deleted only by the scheduled cleanup task-->
                <PoolSize>20</PoolSize>
                <!-- All temporary authentication context data older than CleanUpTimeout value are considered as expired
                and would be deleted during cleanup task -->
                <CleanUpTimeout>40</CleanUpTimeout>
                <EnablePeriodicCleanup>true</EnablePeriodicCleanup>
            </TempDataCleanup>
            <SessionAndTempDataSeparation>
                <Enable>true</Enable>
            </SessionAndTempDataSeparation>
            <UserSessionMapping>
                <Enable>true</Enable>
            </UserSessionMapping>
            <CheckExistingEntryForDeleteOperationInsert>false</CheckExistingEntryForDeleteOperationInsert>
        </SessionDataPersist>
        <PushedAuthReqCleanUp>
            <Enable>true</Enable>
            <CleanUpPeriod>1440</CleanUpPeriod>
        </PushedAuthReqCleanUp>
        <SkipClaimMetadataPersistence>true</SkipClaimMetadataPersistence>
    </JDBCPersistenceManager>

    <!--
    This section provide the ability to configure the storage type for the features that used to store data in the
    registry in IS 7.0.0 or earlier.

    Applicable values:
        - "database" - Data will be store in tables in the specified tables in the identity database.
        - "hybrid"   - Any new changes stored in "database" and any existing data read from "registry" allowing data to
                        on-demand migrate.
        Default value is "database".
    -->
    <DataStorageType>
        <NotificationTemplates>database</NotificationTemplates>
        <SAML>database</SAML>
        <XACML></XACML>
        <CertificateValidation>database</CertificateValidation>
        <AdminAdvisoryBanner>database</AdminAdvisoryBanner>
        <RemoteLoggingConfig>database</RemoteLoggingConfig>
    </DataStorageType>

    <NotificationTemplates>
        <SMSTemplates>
            <Apply>true</Apply>
        </SMSTemplates>
    </NotificationTemplates>

    <!-- Time configurations are in minutes -->
    <TimeConfig>
        <SessionIdleTimeout>15</SessionIdleTimeout>
        <RememberMeTimeout>20160</RememberMeTimeout>
        <!--
        Setting ExtendRememberMeSessionTimeoutOnAuth to TRUE will change the expiry time of the commonAuth cookie
        during the authentication. The default value will be TRUE and the expiry time of the commonAuth cookie
        will change.
        -->
        <ExtendRememberMeSessionTimeoutOnAuth>true</ExtendRememberMeSessionTimeoutOnAuth>
    </TimeConfig>

    <!-- Security configurations -->
    <Security>
        <!-- The directory under which all other KeyStore files will be stored -->
        <KeyStoresDir>${carbon.home}/conf/keystores</KeyStoresDir>
        <KeyManagerType>SunX509</KeyManagerType>
        <TrustManagerType>SunX509</TrustManagerType>

        <KeyStoreMapping>
        </KeyStoreMapping>
    </Security>

    <!-- This configuration is to resolve the internal service URL for internal API calls. -->
    <ServerHostName>localhost</ServerHostName>

    <!--
        Following configuration adds support to change hostnames and paths of authentication and recovery portals.
        Note : These configurations works only when tenant qualified URLs are enabled. Otherwise use configurations
        provided in application-authentication.xml
    -->
    <AuthenticationEndpoint>
        <HostName>localhost</HostName>
        <Path>/authenticationendpoint</Path>
    </AuthenticationEndpoint>
    <RecoveryEndpoint>
        <HostName>localhost</HostName>
        <Path>/accountrecoveryendpoint</Path>
    </RecoveryEndpoint>

    <Identity>
        <IssuerPolicy>SelfAndManaged</IssuerPolicy>
        <TokenValidationPolicy>CertValidate</TokenValidationPolicy>
        <BlackList></BlackList>
        <WhiteList></WhiteList>
        <System>
            <KeyStore></KeyStore>
            <StorePass></StorePass>
        </System>
    </Identity>

    <!--This configuration is used to define the Service Provider name regex in DCR and IdentityApplicationManagementService-->
    <ServiceProviders>
        <SPNameRegex>^[a-zA-Z0-9._-]+(?: [a-zA-Z0-9._-]+)*$</SPNameRegex>
    </ServiceProviders>

    <Connectors>
        <ChallengeQuestions>
            <Enabled>false</Enabled>
        </ChallengeQuestions>
    </Connectors>

    <OpenID>
        <!--
            Default values for OpenIDServerUrl and OpenIDUSerPattern are built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/<context>
            If above format doesn't satisfy uncomment the following configs and explicitly configure the values
         -->
        <OpenIDServerUrl>${carbon.protocol}://${carbon.host}:${carbon.management.port}/openidserver</OpenIDServerUrl>
        <OpenIDUserPattern>${carbon.protocol}://${carbon.host}:${carbon.management.port}/openid</OpenIDUserPattern>
        <OpenIDLoginUrl>${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/openid_login.do</OpenIDLoginUrl>
        <!-- If the users must be prompted for approval -->
        <OpenIDSkipUserConsent>false</OpenIDSkipUserConsent>
        <!-- Expiry time of the OpenID RememberMe token in minutes -->
        <OpenIDRememberMeExpiry>7200</OpenIDRememberMeExpiry>
        <!-- To enable or disable openid dumb mode -->
        <DisableOpenIDDumbMode>false</DisableOpenIDDumbMode>
        <!--
               OpenID private association store is configurable from following configs.
               It includes two new replication stores,
                       i.   OpenIDServerAssociationStore (Default association store)
                       ii.  PrivateAssociationCryptoStore
                       iii. PrivateAssociationReplicationStore
        -->

        <!-- Specify full qualified class name of the class which going to use as private association store -->
        <!--
        <OpenIDPrivateAssociationStoreClass>org.wso2.carbon.identity.provider.openid.PrivateAssociationCryptoStore</OpenIDPrivateAssociationStoreClass>
        -->

        <!-- The expiration time (in minutes) for the OpenID association -->
        <!--
        <OpenIDAssociationExpiryTime>15</OpenIDAssociationExpiryTime>
        -->

        <!-- Configs specific to PrivateAssociationCryptoStore -->
        <!-- Server secret. This value should be the same in all nodes in the cluster -->
        <!--
        <OpenIDPrivateAssociationServerKey>qewlj324lmasc</OpenIDPrivateAssociationServerKey>
        -->

        <!-- Configs specific to PrivateAssociationCryptoStore -->
        <!-- This enable private association cleanup task which cleans expired private associations -->
        <!--
        <EnableOpenIDAssociationCleanupTask>true</EnableOpenIDAssociationCleanupTask>
        -->
        <!-- Time Period (in minutes) that cleanup task would run -->
        <!--
        <OpenIDAssociationCleanupPeriod>15</OpenIDAssociationCleanupPeriod>
        -->
    </OpenID>

<!--Remote Fetch Core Configuration-->
    <RemoteFetch>
        <FetchEnabled>false</FetchEnabled>
        <WorkingDirectory>${carbon.home}/tmp/</WorkingDirectory>
    </RemoteFetch>

    <!--
    Configuration to select default validation.
    Currently we are supporting two username validation "alphaNumeric" and "email".
    This should be secondary configuration along with input validation event listener.
    -->
    <InputValidation>
        <DefaultUserNameValidator>alphaNumeric</DefaultUserNameValidator>
    </InputValidation>

    <ClientAttestation>
        <!-- This tag defines the allowed window between current time and attestation object creation time. -->
        <AllowedWindowMillis>60000</AllowedWindowMillis>
        <AppleAttestationRootCertificatePath>${carbon.home}/repository/resources/identity/apple/attestation/apple_attestation_root_ca.pem</AppleAttestationRootCertificatePath>
        <AppleAttestationRevocationCheckEnabled>false</AppleAttestationRevocationCheckEnabled>
    </ClientAttestation>

    <OAuth>
        <!-- Token cleanup feature config to clean IDN_OAUTH2_ACCESS_TOKEN table-->
        <TokenCleanup>
            <!--If true old access token cleaning feature is enabled -->
            <EnableTokenCleanup>true</EnableTokenCleanup>
            <!--If true  old access token retained in audit table  -->
            <RetainOldAccessToken>false</RetainOldAccessToken>
        </TokenCleanup>
        <!-- Specify the Token issuer class to be used.
             Default: org.wso2.carbon.identity.oauth2.token.OauthTokenIssuerImpl.
             Applicable values: org.wso2.carbon.identity.oauth2.token.JWTTokenIssuer
        -->
        <IdentityOAuthTokenGenerator>org.wso2.carbon.identity.oauth2.token.OauthTokenIssuerImpl</IdentityOAuthTokenGenerator>
        <!--
             True, if access token alias is stored in the database instead of access token.
             Eg. token alias and token is same when default AccessTokenValueGenerator is used.
             When JWTTokenIssuer is used, jti is used as the token alias
             Default: true.
             Applicable values: true,false
        -->
        <!--This will be moved to the interface of token generator -->
        <PersistAccessTokenAlias>true</PersistAccessTokenAlias>

        <!-- This configuration is used to specify the access token value generator.
             Default: org.apache.oltu.oauth2.as.issuer.UUIDValueGenerator
             Applicable values: org.apache.oltu.oauth2.as.issuer.UUIDValueGenerator,
                                org.apache.oltu.oauth2.as.issuer.MD5Generator,
                                org.wso2.carbon.identity.oauth.tokenvaluegenerator.SHA256Generator-->
        <AccessTokenValueGenerator>org.apache.oltu.oauth2.as.issuer.UUIDValueGenerator</AccessTokenValueGenerator>
        <!-- This configuration is used to specify whether the Service Provider tenant domain should be used when generating
             access token. Otherwise user domain will be used. Currently this value is only supported by the JWTTokenIssuer.-->
        <UseSPTenantDomain>true</UseSPTenantDomain>

        <!-- This configuration is used to enable or disable generation of random numbers using HMAC-SHA256 algorithm.-->
        <EnableSHA256Params>true</EnableSHA256Params>

        <!--
            Default values for OAuth1RequestTokenUrl, OAuth1AccessTokenUrl, OAuth1AuthorizeUrl
            OAuth2AuthzEPUrl, OAuth2TokenEPUrl and OAuth2UserInfoEPUrl are built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/<context>/<path>
            If above format doesn't satisfy uncomment the following configs and explicitly configure the values
         -->
        <OAuth1RequestTokenUrl>https://localhost:${carbon.management.port}/oauth/request-token</OAuth1RequestTokenUrl>
        <OAuth1AuthorizeUrl>https://localhost:${carbon.management.port}/oauth/authorize-url</OAuth1AuthorizeUrl>
        <OAuth1AccessTokenUrl>https://localhost:${carbon.management.port}/oauth/access-token</OAuth1AccessTokenUrl>
        <OAuth2AuthzEPUrl>https://localhost:${carbon.management.port}/oauth2/authorize</OAuth2AuthzEPUrl>
        <OAuth2ParEPUrl>https://localhost:${carbon.management.port}/oauth2/par</OAuth2ParEPUrl>
        <OAuth2TokenEPUrl>https://localhost:${carbon.management.port}/oauth2/token</OAuth2TokenEPUrl>
        <OAuth2RevokeEPUrl>https://localhost:${carbon.management.port}/oauth2/revoke</OAuth2RevokeEPUrl>
        <OAuth2IntrospectEPUrl>https://localhost:${carbon.management.port}/oauth2/introspect</OAuth2IntrospectEPUrl>
        <OAuth2UserInfoEPUrl>https://localhost:${carbon.management.port}/oauth2/userinfo</OAuth2UserInfoEPUrl>
        <OIDCCheckSessionEPUrl>https://localhost:${carbon.management.port}/oidc/checksession</OIDCCheckSessionEPUrl>
        <OIDCLogoutEPUrl>https://localhost:${carbon.management.port}/oidc/logout</OIDCLogoutEPUrl>
        <OAuth2ConsentPage>https://localhost:${carbon.management.port}/authenticationendpoint/oauth2_authz.do</OAuth2ConsentPage>
        <OAuth2ErrorPage>https://localhost:${carbon.management.port}/authenticationendpoint/oauth2_error.do</OAuth2ErrorPage>
        <OIDCConsentPage>https://localhost:${carbon.management.port}/authenticationendpoint/oauth2_consent.do</OIDCConsentPage>
        <OIDCLogoutConsentPage>https://localhost:${carbon.management.port}/authenticationendpoint/oauth2_logout_consent.do</OIDCLogoutConsentPage>
        <OIDCLogoutPage>https://localhost:${carbon.management.port}/authenticationendpoint/oauth2_logout.do</OIDCLogoutPage>

        <OIDCWebFingerEPUrl>https://localhost:${carbon.management.port}/.well-known/webfinger</OIDCWebFingerEPUrl>

        <!-- For tenants below urls will be modified as https://<hostname>:<port>/t/<tenant domain>/<path>-->
        <OAuth2DCREPUrl>https://localhost:${carbon.management.port}/api/identity/oauth2/dcr/v1.1/register</OAuth2DCREPUrl>
        <OAuth2JWKSPage>https://localhost:${carbon.management.port}/oauth2/jwks</OAuth2JWKSPage>
        <OIDCDiscoveryEPUrl>https://localhost:${carbon.management.port}/oauth2/oidcdiscovery</OIDCDiscoveryEPUrl>
        <OAuth2DeviceAuthzEPUrl>https://localhost:${carbon.management.port}/oauth2/device_authorize</OAuth2DeviceAuthzEPUrl>


        <MutualTLSAliases>
            <Enabled>false</Enabled>
            <Hostname>localhost</Hostname>
        </MutualTLSAliases>

        <EnableSHA256OAuth2JWKThumbprint>true</EnableSHA256OAuth2JWKThumbprint>

        <!-- If enabled, resident Idp entity id will be honoured as the issuer location in OpenId Connect Discovery -->
        <UseEntityIdAsIssuerInOidcDiscovery>true</UseEntityIdAsIssuerInOidcDiscovery>

        <!-- If enabled, OIDC claims will be skipped when requesting token for client credential grant type
             currently used by JWT token issuer for issuing access token-->
        <SkipOIDCClaimsForClientCredentialGrant>true</SkipOIDCClaimsForClientCredentialGrant>

        <!-- If enabled, authentication failure reason will be shown in the response for password grant -->
            <ShowAuthFailureReasonForPasswordGrant></ShowAuthFailureReasonForPasswordGrant>

        <!-- If enabled, hostname will be used to build the issuer instead of entity ID -->
        <BuildIssuerWithHostname></BuildIssuerWithHostname>

        <!-- Default validity period for Authorization Code in seconds -->
        <AuthorizationCodeDefaultValidityPeriod>300</AuthorizationCodeDefaultValidityPeriod>
        <!-- Default validity period for application access tokens in seconds -->
        <AccessTokenDefaultValidityPeriod>3600</AccessTokenDefaultValidityPeriod>
        <!-- Default validity period for user access tokens in seconds -->
        <UserAccessTokenDefaultValidityPeriod>3600</UserAccessTokenDefaultValidityPeriod>
        <!-- Validity period for refresh token -->
        <RefreshTokenValidityPeriod>86400</RefreshTokenValidityPeriod>
        <!-- Timestamp skew in seconds -->
        <TimestampSkew>0</TimestampSkew>
        <!-- Enable renewal of refresh token for refresh_token grant -->
        <RenewRefreshTokenForRefreshGrant>true</RenewRefreshTokenForRefreshGrant>
        <!-- Enable the authenticated user validation config for refresh grant -->
        <ValidateAuthenticatedUserForRefreshGrant>false</ValidateAuthenticatedUserForRefreshGrant>
        <!-- Enable password grant to go through the framework -->
        <EnablePasswordFlowEnhancements>false</EnablePasswordFlowEnhancements>
        <!-- Enable Extend renews refresh token expiry time -->
        <ExtendRenewedRefreshTokenExpiryTime>true</ExtendRenewedRefreshTokenExpiryTime>
        <!-- Process the token before storing it in database, e.g. encrypting -->
        <TokenPersistenceProcessor>org.wso2.carbon.identity.oauth.tokenprocessor.PlainTextPersistenceProcessor</TokenPersistenceProcessor>

        <HashAlgorithm>SHA-256</HashAlgorithm>
        <!-- This should be true if the oauth keys (consumer secret, access token, refresh token and authorization code) need to be hashed,
             before storing them in the database. If the value is false, the oauth keys will be saved in a plain text format.
             By default : false.
             Supported versions: IS 5.6.0 onwards.
        -->
        <EnableClientSecretHash>false</EnableClientSecretHash>
        <!-- If the user is a federated, user will not be able to access claims from local userstore even if the username matches -->
        <MapFederatedUsersToLocal>false</MapFederatedUsersToLocal>

        <!-- Supported Response Modes -->
        <SupportedResponseModes>
            <SupportedResponseMode>
                <ResponseModeName>query</ResponseModeName>
                <ResponseModeProviderClass>org.wso2.carbon.identity.oauth2.responsemode.provider.impl.QueryResponseModeProvider</ResponseModeProviderClass>
            </SupportedResponseMode>
            <SupportedResponseMode>
                <ResponseModeName>fragment</ResponseModeName>
                <ResponseModeProviderClass>org.wso2.carbon.identity.oauth2.responsemode.provider.impl.FragmentResponseModeProvider</ResponseModeProviderClass>
            </SupportedResponseMode>
            <SupportedResponseMode>
                <ResponseModeName>form_post</ResponseModeName>
                <ResponseModeProviderClass>org.wso2.carbon.identity.oauth2.responsemode.provider.impl.FormPostResponseModeProvider</ResponseModeProviderClass>
            </SupportedResponseMode>
                <SupportedResponseMode>
                    <ResponseModeName>jwt</ResponseModeName>
                    <ResponseModeProviderClass>org.wso2.carbon.identity.oauth2.responsemode.provider.jarm.impl.JwtResponseModeProvider</ResponseModeProviderClass>
                </SupportedResponseMode>
                <SupportedResponseMode>
                    <ResponseModeName>query.jwt</ResponseModeName>
                    <ResponseModeProviderClass>org.wso2.carbon.identity.oauth2.responsemode.provider.jarm.impl.QueryJwtResponseModeProvider</ResponseModeProviderClass>
                </SupportedResponseMode>
                <SupportedResponseMode>
                    <ResponseModeName>fragment.jwt</ResponseModeName>
                    <ResponseModeProviderClass>org.wso2.carbon.identity.oauth2.responsemode.provider.jarm.impl.FragmentJwtResponseModeProvider</ResponseModeProviderClass>
                </SupportedResponseMode>
                <SupportedResponseMode>
                    <ResponseModeName>form_post.jwt</ResponseModeName>
                    <ResponseModeProviderClass>org.wso2.carbon.identity.oauth2.responsemode.provider.jarm.impl.FormPostJwtResponseModeProvider</ResponseModeProviderClass>
                </SupportedResponseMode>
        </SupportedResponseModes>

        <DefaultResponseModeProviderClass>org.wso2.carbon.identity.oauth2.responsemode.provider.impl.DefaultResponseModeProvider</DefaultResponseModeProviderClass>

        <!-- Validity period for jarm response jwt in seconds -->
        <JARMResponseJwtValidityPeriodInSeconds>600</JARMResponseJwtValidityPeriodInSeconds>

        <!-- Supported Response Types -->
        <SupportedResponseTypes>
            <SupportedResponseType>
                <ResponseTypeName>token</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.AccessTokenResponseTypeHandler</ResponseTypeHandlerImplClass>
            </SupportedResponseType>
            <SupportedResponseType>
                <ResponseTypeName>code</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.CodeResponseTypeHandler</ResponseTypeHandlerImplClass>
            </SupportedResponseType>
            <SupportedResponseType>
                <ResponseTypeName>id_token</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.IDTokenResponseTypeHandler</ResponseTypeHandlerImplClass>
            </SupportedResponseType>
            <SupportedResponseType>
                <ResponseTypeName>id_token token</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.IDTokenTokenResponseTypeHandler</ResponseTypeHandlerImplClass>
            </SupportedResponseType>
            <SupportedResponseType>
                <ResponseTypeName>code token</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.HybridResponseTypeHandler</ResponseTypeHandlerImplClass>
            </SupportedResponseType>
            <SupportedResponseType>
                <ResponseTypeName>code id_token</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.HybridResponseTypeHandler</ResponseTypeHandlerImplClass>
            </SupportedResponseType>
            <SupportedResponseType>
                <ResponseTypeName>code id_token token</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.HybridResponseTypeHandler</ResponseTypeHandlerImplClass>
            </SupportedResponseType>
                <SupportedResponseType>
                <ResponseTypeName>device</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.device.response.DeviceFlowResponseTypeHandler</ResponseTypeHandlerImplClass>
                <ResponseTypeValidatorImplClass>org.wso2.carbon.identity.oauth2.device.response.DeviceFlowResponseTypeValidator</ResponseTypeValidatorImplClass>
            </SupportedResponseType>
                <SupportedResponseType>
                <ResponseTypeName>none</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.NoneResponseTypeHandler</ResponseTypeHandlerImplClass>
                <ResponseTypeValidatorImplClass>org.wso2.carbon.identity.oauth.common.NoneResponseTypeValidator</ResponseTypeValidatorImplClass>
            </SupportedResponseType>
                <SupportedResponseType>
                <ResponseTypeName>subject_token</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.SubjectTokenResponseTypeHandler</ResponseTypeHandlerImplClass>
                <ResponseTypeValidatorImplClass>org.wso2.carbon.identity.oauth.common.SubjectTokenResponseValidator</ResponseTypeValidatorImplClass>
            </SupportedResponseType>
                <SupportedResponseType>
                <ResponseTypeName>id_token subject_token</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.SubjectTokenResponseTypeHandler</ResponseTypeHandlerImplClass>
                <ResponseTypeValidatorImplClass>org.wso2.carbon.identity.oauth.common.SubjectTokenResponseValidator</ResponseTypeValidatorImplClass>
            </SupportedResponseType>
        </SupportedResponseTypes>
        <!-- Supported Grant Types -->
        <SupportedGrantTypes>
            <SupportedGrantType>
                <GrantTypeName>authorization_code</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.AuthorizationCodeGrantHandler</GrantTypeHandlerImplClass>
                <PublicClientAllowed>true</PublicClientAllowed>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>password</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.PasswordGrantHandler</GrantTypeHandlerImplClass>
                <PublicClientAllowed>true</PublicClientAllowed>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>refresh_token</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.RefreshGrantHandler</GrantTypeHandlerImplClass>
                <PublicClientAllowed>true</PublicClientAllowed>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>client_credentials</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.ClientCredentialsGrantHandler</GrantTypeHandlerImplClass>
                <IsRefreshTokenAllowed>false</IsRefreshTokenAllowed>
                <IdTokenAllowed>false</IdTokenAllowed>
                <PublicClientAllowed>false</PublicClientAllowed>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>urn:ietf:params:oauth:grant-type:saml2-bearer</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.saml.SAML2BearerGrantHandler</GrantTypeHandlerImplClass>
                <PublicClientAllowed>true</PublicClientAllowed>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>iwa:ntlm</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.iwa.ntlm.NTLMAuthenticationGrantHandler</GrantTypeHandlerImplClass>
                <PublicClientAllowed>true</PublicClientAllowed>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>urn:ietf:params:oauth:grant-type:jwt-bearer</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.grant.jwt.JWTBearerGrantHandler</GrantTypeHandlerImplClass>
                <GrantTypeValidatorImplClass>org.wso2.carbon.identity.oauth2.grant.jwt.JWTGrantValidator</GrantTypeValidatorImplClass>
                <IsRefreshTokenAllowed>true</IsRefreshTokenAllowed>
                <PublicClientAllowed>true</PublicClientAllowed>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>account_switch</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.user.account.association.handler.grant.AccountSwitchGrantHandler</GrantTypeHandlerImplClass>
                <GrantTypeValidatorImplClass>org.wso2.carbon.identity.user.account.association.validator.grant.AccountSwitchGrantValidator</GrantTypeValidatorImplClass>
                <PublicClientAllowed>true</PublicClientAllowed>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>urn:ietf:params:oauth:grant-type:device_code</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.device.grant.DeviceFlowGrant</GrantTypeHandlerImplClass>
                <GrantTypeValidatorImplClass>org.wso2.carbon.identity.oauth2.device.grant.DeviceFlowGrantValidator</GrantTypeValidatorImplClass>
                <IdTokenAllowed>true</IdTokenAllowed>
                <PublicClientAllowed>true</PublicClientAllowed>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>organization_switch</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.grant.organizationswitch.OrganizationSwitchGrant</GrantTypeHandlerImplClass>
                <GrantTypeValidatorImplClass>org.wso2.carbon.identity.oauth2.grant.organizationswitch.OrganizationSwitchGrantValidator</GrantTypeValidatorImplClass>
                <IdTokenAllowed>true</IdTokenAllowed>
                <PublicClientAllowed>true</PublicClientAllowed>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>urn:ietf:params:oauth:grant-type:token-exchange</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.grant.token.exchange.TokenExchangeGrantHandler</GrantTypeHandlerImplClass>
                <GrantTypeValidatorImplClass>org.wso2.carbon.identity.oauth2.grant.token.exchange.TokenExchangeGrantValidator</GrantTypeValidatorImplClass>
                <IdTokenAllowed>false</IdTokenAllowed>
                <IsRefreshTokenAllowed>true</IsRefreshTokenAllowed>
                <PublicClientAllowed>true</PublicClientAllowed>
            </SupportedGrantType>
        </SupportedGrantTypes>

        <!--
            Defines the grant types that will filter user claims based on user consent in their responses such as
            id_token or user info response.

            Default grant types that filter user claims based on user consent are 'authorization_code' and 'implicit'.

            Supported versions: IS 5.5.0 onwards.
        -->
        <UserConsentEnabledGrantTypes>
            <UserConsentEnabledGrantType>
                <GrantTypeName>authorization_code</GrantTypeName>
            </UserConsentEnabledGrantType>
            <UserConsentEnabledGrantType>
                <GrantTypeName>implicit</GrantTypeName>
            </UserConsentEnabledGrantType>
        </UserConsentEnabledGrantTypes>


        <OAuthCallbackHandlers>
              <OAuthCallbackHandler Class="org.wso2.carbon.identity.oauth.callback.DefaultCallbackHandler">
               </OAuthCallbackHandler>
        </OAuthCallbackHandlers>

        <TokenValidators>
            <TokenValidator type="bearer" class="org.wso2.carbon.identity.oauth2.validators.DefaultOAuth2TokenValidator"/>
            <TokenValidator type="jwt" class="org.wso2.carbon.identity.oauth2.validators.OAuth2JWTTokenValidator"/>
        </TokenValidators>

        <!-- Scope validators list. The validators registered here wil be executed during token validation. -->
        <ScopeValidators>
            <ScopeValidator class="org.wso2.carbon.identity.oauth2.validators.JDBCScopeValidator" />
        </ScopeValidators>

        <!-- Flag to enable or disable scope validation for implicit grant and authorization code grant.
        Default value : true
        Supported versions: IS 5.8.1  onwards
        -->
        <ScopeValidationEnabledForAuthzCodeAndImplicitGrant>true</ScopeValidationEnabledForAuthzCodeAndImplicitGrant>
        <ScopeValidationPreserveCaseSensitivity>false</ScopeValidationPreserveCaseSensitivity>


        <!-- Scope handlers list. The handlers registered here will be executed at the scope validation phase while
         issuing access tokens. -->
        <!-- ScopeHandler is used decide whether a grant type can issue id_tokens or not this can also achieve by grant
        handler class. Therefor not supporting additional scope handlers. -->
        <ScopeHandlers>
            <ScopeHandler class="org.wso2.carbon.identity.oauth2.validators.OIDCScopeHandler" />
        </ScopeHandlers>

        <EnableGlobalRBACScopeIssuer>false</EnableGlobalRBACScopeIssuer>

        <!-- Assertions can be used to embedd parameters into access token. -->
        <EnableAssertions>
            <UserName>false</UserName>
        </EnableAssertions>

        <!-- This should be true if subject identifier in the token validation response needs to adhere to the
        following SP configuration.

        - Use tenant domain in local subject identifier.
        - Use user store domain in local subject identifier.

        if the value is false, subject identifier will be set as the fully qualified username.

        Default value : false

        Supported versions: IS 5.4.0 beta onwards
        -->
        <BuildSubjectIdentifierFromSPConfig>false</BuildSubjectIdentifierFromSPConfig>

        <!-- This should be set to true when using multiple user stores and keys
            should saved into different tables according to the user store. By default
            all the application keys are saved in to the same table. UserName Assertion
            should be 'true' to use this. -->
        <EnableAccessTokenPartitioning>false</EnableAccessTokenPartitioning>
        <!-- user store domain names and mapping to new table name. eg: if you
            provide 'A:foo.com', foo.com should be the user store domain name and 'A'
            represent the relavant mapping of token store table, i.e. tokens will be
            added to a table called IDN_OAUTH2_ACCESS_TOKEN_A. -->
        <AccessTokenPartitioningDomains><!-- A:foo.com, B:bar.com --></AccessTokenPartitioningDomains>
        <AuthorizationContextTokenGeneration>
            <Enabled>false</Enabled>
            <TokenGeneratorImplClass>org.wso2.carbon.identity.oauth2.authcontext.JWTTokenGenerator</TokenGeneratorImplClass>
            <ClaimsRetrieverImplClass>org.wso2.carbon.identity.oauth2.authcontext.DefaultClaimsRetriever</ClaimsRetrieverImplClass>
            <ConsumerDialectURI>http://wso2.org/claims</ConsumerDialectURI>
            <SignatureAlgorithm>SHA256withRSA</SignatureAlgorithm>
            <AuthorizationContextTTL>15</AuthorizationContextTTL>
        </AuthorizationContextTokenGeneration>

        <!-- Configurations for JWT bearer grant. Supported versions: IS 5.8.0 onwards. -->
        <JWTGrant>
            <!-- Validate issued at time (iat) of JWT token. The validity can be set using 'IATValidity' configuration.
             Default value is 'true'.
             -->
            <EnableIATValidation>true</EnableIATValidation>
            <!-- Reject the JWT if the iat of JWT is pass a certain time period. Time period is in minutes.
             'EnableIATValidation' configuration should be set to 'true' in order to make use of the validity period.
             Default value is '30' minutes.
             -->
            <IATValidityPeriod>30</IATValidityPeriod>
            <EnableJWTCache>false</EnableJWTCache>
        </JWTGrant>

        <SAML2Grant>
            <!--SAML2TokenHandler></SAML2TokenHandler-->
            <!-- UserType conifg decides whether the SAML assertion carrying user is local user or a federated user.
            Only Local Users can access claims from local userstore. LEGACY users will have to have tenant domain appended username.
            They will not be able to access claims from local userstore. To get claims by mapping users with exact same username from local
            userstore (for non LOCAL scenarios) use mapFederatedUsersToLocal config -->
            <UserType>FEDERATED</UserType>
        </SAML2Grant>

        <OpenIDConnect>
            <ConvertOriginalClaimsFromAssertionsToOIDCDialect>true</ConvertOriginalClaimsFromAssertionsToOIDCDialect>
            <AddUnmappedUserAttributes>false</AddUnmappedUserAttributes>
            <IDTokenBuilder>org.wso2.carbon.identity.openidconnect.DefaultIDTokenBuilder</IDTokenBuilder>
            <SignatureAlgorithm>SHA256withRSA</SignatureAlgorithm>

            <!-- Send the response to OAuth2 error page -->

            <!-- Default asymmetric encryption algorithm that used to encrypt CEK. -->
            <IDTokenEncryptionAlgorithm>RSA-OAEP</IDTokenEncryptionAlgorithm>
            <!-- Default symmetric encryption algorithm that used to encrypt JWT claims set. -->
            <IDTokenEncryptionMethod>A128GCM</IDTokenEncryptionMethod>

            <!-- Supported versions: IS 5.5.0 onwards. -->
            <SupportedIDTokenEncryptionAlgorithms>
                <SupportedIDTokenEncryptionAlgorithm>RSA-OAEP</SupportedIDTokenEncryptionAlgorithm>
                <SupportedIDTokenEncryptionAlgorithm>RSA1_5</SupportedIDTokenEncryptionAlgorithm>
            </SupportedIDTokenEncryptionAlgorithms>
            <SupportedIDTokenEncryptionMethods>
                <SupportedIDTokenEncryptionMethod>A128GCM</SupportedIDTokenEncryptionMethod>
                <SupportedIDTokenEncryptionMethod>A192GCM</SupportedIDTokenEncryptionMethod>
                <SupportedIDTokenEncryptionMethod>A256GCM</SupportedIDTokenEncryptionMethod>
                <SupportedIDTokenEncryptionMethod>A128CBC-HS256</SupportedIDTokenEncryptionMethod>
                <SupportedIDTokenEncryptionMethod>A128CBC+HS256</SupportedIDTokenEncryptionMethod>
            </SupportedIDTokenEncryptionMethods>
            <SupportedRequestObjectEncryptionAlgorithms>
                <SupportedRequestObjectEncryptionAlgorithm>RSA-OAEP</SupportedRequestObjectEncryptionAlgorithm>
                <SupportedRequestObjectEncryptionAlgorithm>RSA1_5</SupportedRequestObjectEncryptionAlgorithm>
            </SupportedRequestObjectEncryptionAlgorithms>
            <SupportedRequestObjectEncryptionMethods>
                <SupportedRequestObjectEncryptionMethod>A128GCM</SupportedRequestObjectEncryptionMethod>
                <SupportedRequestObjectEncryptionMethod>A192GCM</SupportedRequestObjectEncryptionMethod>
                <SupportedRequestObjectEncryptionMethod>A256GCM</SupportedRequestObjectEncryptionMethod>
                <SupportedRequestObjectEncryptionMethod>A128CBC-HS256</SupportedRequestObjectEncryptionMethod>
                <SupportedRequestObjectEncryptionMethod>A128CBC+HS256</SupportedRequestObjectEncryptionMethod>
            </SupportedRequestObjectEncryptionMethods>

            <EnableAudiences>true</EnableAudiences>

            <!--
                Default value for IDTokenIssuerID, is OAuth2TokenEPUrl.
                If that doesn't satisfy uncomment the following config and explicitly configure the value
            -->
            <IDTokenIssuerID>https://localhost:${carbon.management.port}/oauth2/token</IDTokenIssuerID>
            <IDTokenCustomClaimsCallBackHandler>org.wso2.carbon.identity.openidconnect.SAMLAssertionClaimsCallback</IDTokenCustomClaimsCallBackHandler>
            <IDTokenExpiration>3600</IDTokenExpiration>
            <UserInfoJWTSignatureAlgorithm>SHA256withRSA</UserInfoJWTSignatureAlgorithm>
            <UserInfoEndpointClaimRetriever>org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInfoUserStoreClaimRetriever</UserInfoEndpointClaimRetriever>
            <UserInfoEndpointRequestValidator>org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInforRequestDefaultValidator</UserInfoEndpointRequestValidator>
            <UserInfoEndpointAccessTokenValidator>org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInfoISAccessTokenValidator</UserInfoEndpointAccessTokenValidator>
            <UserInfoMultiValueSupportEnabled>true</UserInfoMultiValueSupportEnabled>
            <UserInfoRemoveInternalPrefixFromRoles>false</UserInfoRemoveInternalPrefixFromRoles>
            <UserInfoEndpointResponseBuilder>org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInfoJSONResponseBuilder</UserInfoEndpointResponseBuilder>
            <SkipUserConsent>false</SkipUserConsent>
            <SkipLoginConsent>false</SkipLoginConsent>
            <SkipLogoutConsent>false</SkipLogoutConsent>
            <!-- Sign the ID Token with Service Provider Tenant Private Key-->
            <SignJWTWithSPKey>true</SignJWTWithSPKey>
            <!-- Add tenant domain to 'realm' claim of ID Token-->
            <AddTenantDomainToIdToken>false</AddTenantDomainToIdToken>
            <!-- Add userstore domain to 'realm' claim of ID Token-->
            <AddUserstoreDomainToIdToken>false</AddUserstoreDomainToIdToken>
            <!--
                Expiry period of the logout token used in OIDC Back Channel Logout in seconds.
                Supported versions: IS 5.5.0 onwards
            -->
            <LogoutTokenExpiration>120</LogoutTokenExpiration>

            <!--
                OIDC Request Object builder implementation.
                Supported versions: IS 5.4.0 onwards
            -->
            <RequestObjectBuilders>
                <RequestObjectBuilder>
                    <Type>request_param_value_builder</Type>
                    <ClassName>org.wso2.carbon.identity.openidconnect.RequestParamRequestObjectBuilder</ClassName>
                </RequestObjectBuilder>
            </RequestObjectBuilders>

            <!--
                OIDC Request Object validator implementation.
                Supported versions: IS 5.4.0 onwards
            -->
            <RequestObjectValidator>org.wso2.carbon.identity.openidconnect.RequestObjectValidatorImpl</RequestObjectValidator>
            <RedirectToPostLogoutUriOnConsentDenial>true</RedirectToPostLogoutUriOnConsentDenial>

            <!--
                FAPI Profile Support.
            -->
            <FAPI>
                <EnableFAPIValidation>true</EnableFAPIValidation>
                <EnableCibaProfile>false</EnableCibaProfile>
                <EnableSecurityProfile>false</EnableSecurityProfile>
                <AllowedClientAuthenticationMethods>
                        <AllowedClientAuthenticationMethod>private_key_jwt</AllowedClientAuthenticationMethod>
                        <AllowedClientAuthenticationMethod>tls_client_auth</AllowedClientAuthenticationMethod>
                </AllowedClientAuthenticationMethods>
                <AllowedSignatureAlgorithms>
                        <AllowedSignatureAlgorithm>PS256</AllowedSignatureAlgorithm>
                        <AllowedSignatureAlgorithm>ES256</AllowedSignatureAlgorithm>
                </AllowedSignatureAlgorithms>
            </FAPI>

            <SupportedTokenEndpointSigningAlgorithms>
                    <SupportedTokenEndpointSigningAlgorithm>PS256</SupportedTokenEndpointSigningAlgorithm>
                    <SupportedTokenEndpointSigningAlgorithm>ES256</SupportedTokenEndpointSigningAlgorithm>
                    <SupportedTokenEndpointSigningAlgorithm>SHA256withRSA</SupportedTokenEndpointSigningAlgorithm>
            </SupportedTokenEndpointSigningAlgorithms>
            <SupportedIDTokenSigningAlgorithms>
                    <SupportedIDTokenSigningAlgorithm>PS256</SupportedIDTokenSigningAlgorithm>
                    <SupportedIDTokenSigningAlgorithm>ES256</SupportedIDTokenSigningAlgorithm>
                    <SupportedIDTokenSigningAlgorithm>SHA256withRSA</SupportedIDTokenSigningAlgorithm>
            </SupportedIDTokenSigningAlgorithms>
            <SupportedRequestObjectSigningAlgorithms>
                    <SupportedRequestObjectSigningAlgorithm>PS256</SupportedRequestObjectSigningAlgorithm>
                    <SupportedRequestObjectSigningAlgorithm>ES256</SupportedRequestObjectSigningAlgorithm>
                    <SupportedRequestObjectSigningAlgorithm>SHA256withRSA</SupportedRequestObjectSigningAlgorithm>
            </SupportedRequestObjectSigningAlgorithms>

            <DefaultSubjectType>public</DefaultSubjectType>
            <EnablePairwiseSubForAccessToken>true</EnablePairwiseSubForAccessToken>
            <EnableTLSCertificateBoundAccessTokensViaBindingType>true</EnableTLSCertificateBoundAccessTokensViaBindingType>
            <EnableHybridFlowAppLevelValidation>true</EnableHybridFlowAppLevelValidation>
            <EnableClaimsSeparationForAccessToken>true</EnableClaimsSeparationForAccessToken>
        </OpenIDConnect>

        <!-- OIDCSessionStateManager configuration -->

        <!--
            Configs related to OAuth2 Device Code Grant.
            Supported versions: IS 5.12.0 onwards
        -->
        <DeviceCodeGrant>
          <KeyLength>6</KeyLength>
          <ExpiryTime>600000</ExpiryTime>
          <PollingInterval>5000</PollingInterval>
          <KeySet>BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz23456789</KeySet>
        </DeviceCodeGrant>

        <!--
            Configs related to OAuth2 Pushed Authorization Requests.
            Supported versions: IS 6.2.0 onwards.
        -->
        <PAR>
            <ExpiryTime>60</ExpiryTime>
        </PAR>

        <!--
            Config related to display name in Authorization Code Grant consent page.
            Default value : false
        -->

        <!-- Configs related to OAuth2 token persistence -->
        <TokenPersistence>
            <Enable>true</Enable>
            <PoolSize>0</PoolSize>
            <RetryCount>5</RetryCount>
        </TokenPersistence>

        <!--
            Config related to OAuth2 authorization code persistence.
            Prior to IS 7.0.0, this was handled by the config <TokenPersistence>.<Enable>.
       -->
        <EnableAuthCodePersistence>true</EnableAuthCodePersistence>

        <!--
            Config to enable revoked token headers : "RevokedAccessToken", "RevokedRefreshToken" in OAuth2 revoke
            endpoint response.
        -->
        <EnableRevokeTokenHeadersInResponse>false</EnableRevokeTokenHeadersInResponse>

        <!--
            Configuration provides the ability to renew the access token and the refresh token(where applicable) per each token request
            and revoke previously available active token for a matching clientid, user and scopes combination.

            Not applicable for refresh token grant type and when when self-contained access tokens are used.

            Default value : false
            Supported versions : IS 5.8.0 onwards
         -->
        <RenewTokenPerRequest>false</RenewTokenPerRequest>

        <!--
        By enabling this property, in a logout request if the opbs cookie or a valid session does not exist instead of
        showing the invalid request error page the user will be redirected to the successfully logged out page of the IS
        or if a valid id_token_hint and a valid post_logout_redirect_uri is available user will be redirected to the
        post_logout_redirect_uri

        Default value : true
        Supported versions : IS 5.8.0 onwards
        -->
        <HandleAlreadyLoggedOutSessionsGracefully>true</HandleAlreadyLoggedOutSessionsGracefully>


        <Introspection>
            <!--
                This config will remove any optional claims from introspection response. Before setting the response to the
                introspection endpoint claims configured below will be removed.
            -->
            <FilteredClaims>
            </FilteredClaims>
        </Introspection>

        <PublishPasswordGrantLogin>false</PublishPasswordGrantLogin>

        <!--
        By enabling this property, application role permission will require to view the OAuth app in DCRM.

        Default value : true
        -->
        <DCRM>
            <ApplicationRolePermissionRequiredToView>true</ApplicationRolePermissionRequiredToView>
            <ClientAuthenticationRequired>true</ClientAuthenticationRequired>
            <MandatorySoftwareStatement>false</MandatorySoftwareStatement>
            <EnableFAPIEnforcement>false</EnableFAPIEnforcement>
            <EnableSectorIdentifierURIValidation>false</EnableSectorIdentifierURIValidation>
        </DCRM>

        <!--
        By enabling this config, additional parameters will be append to OAuth2 error url.
        Currently it appends SP and tenant domain as the additional parameters.
        Default value : false
        -->

        <!--
        By enabling this feature, server will identify a JWT token at the introspection endpoint by attempting a JWT
        token parsing. If identified, introspection is performed by treating the token as a JWT access token.

        Important: Enabling this feature will validate the token using the available JWT token validator. Ex: In the
                   default pack, this will be Default JWT token validator. However, if the server issue custom JWT
                   tokens, which fails the available JWT token validator, the existing flow can break. For an example,
                   the default JWT token validator mandate to have the jti claim in the token. If a custom token issuer
                   does not include this claim, introspection breaks once this feature is enabled. In such scenarios,
                   a compatible JWT token validator should be deployed in the system prior to enabling this feature.

        Default value: true
        -->
        <EnableJWTTokenValidationDuringIntrospection>true</EnableJWTTokenValidationDuringIntrospection>

        <!--
        By enabling this property, client id will be used as the sub claim for the access tokens issued for the
        authenticated applications.

        Default value : true
        -->
        <UseClientIdAsSubClaimForAppTokens>true</UseClientIdAsSubClaimForAppTokens>

        <!--
        By enabling this property, username will be removed from the introspection response for application tokens.

        Default value : true
        -->
        <RemoveUsernameFromIntrospectionResponseForAppTokens>true</RemoveUsernameFromIntrospectionResponseForAppTokens>


        <!-- Configuration to pass a list of scopes which are allowed without any validation. -->
        <AllowedScopes>
                <Scope>^device_.*</Scope>
        </AllowedScopes>

        % if oauth.default_requested_scopes is defined %}
        <!-- Configuration to pass a list of default requested scopes. -->
        <DefaultRequestedScopes>
        </DefaultRequestedScopes>

        <!--
        By enabling this config, any unregistered scopes(excluding internal scopes and allowed scopes)
        passed in a OAuth based authz request will be dropped.
        Default value : false
        -->
        <DropUnregisteredScopes>true</DropUnregisteredScopes>

        <!-- Configuration for allowing users to introspect tokens from other tenants. -->
        <AllowCrossTenantTokenIntrospection>false</AllowCrossTenantTokenIntrospection>


        <RestrictedScopes>
            <RestrictedScope>internal</RestrictedScope>
            <RestrictedScope>console</RestrictedScope>
            <RestrictedScope>SYSTEM</RestrictedScope>
        </RestrictedScopes>

        <!-- Configuration to enable setting local IDP generated AMR values with the values sent by the used idp. -->
        <ReplaceDefaultAMRValuesWithIDPSentValues>false</ReplaceDefaultAMRValuesWithIDPSentValues>

        <!-- Configuration to enable global scope validators. -->
        <GlobalScopeValidators>
            <RoleBasedScopeIssuer>
                <Enable>false</Enable>
            </RoleBasedScopeIssuer>
        </GlobalScopeValidators>

        <!-- Configuration to pass a list of keys which are restricted to be sent as query parameters. -->
        <RestrictedQueryParameters>
                <Parameter>username</Parameter>
                <Parameter>password</Parameter>
                <Parameter>client_secret</Parameter>
        </RestrictedQueryParameters>

        <AuthorizeAllScopes>false</AuthorizeAllScopes>

        <!--
            When this configuration is enabled, the system supports the features defined in RFC9396,
            allowing rich authorization requests to be processed.
            Default value : false
        -->
        <EnableRichAuthorizationRequests>true</EnableRichAuthorizationRequests>
    </OAuth>

    <RestApiAuthentication>
            <!-- Configuration for adding realm user field in WWW-Authenticate header. -->
            <AddRealmUserToError>false</AddRealmUserToError>
    </RestApiAuthentication>

    <!--
    Configuration to select JS engine for Adaptive authentication feature.
    Currently we are supporting OpenJDK Nashorn engine("openjdkNashorn") and JDK Nashorn Engine(Default).
    -->
    <AdaptiveAuth>
   	    <ScriptEngine>graaljs</ScriptEngine>
   	    <LimitScriptEngineCreation></LimitScriptEngineCreation>
    </AdaptiveAuth>

    <MultifactorAuthentication>
        <!--Enable>false</Enable-->
        <XMPPSettings>
            <XMPPConfig>
                <XMPPProvider>gtalk</XMPPProvider>
                <XMPPServer>talk.google.com</XMPPServer>
                <XMPPPort>5222</XMPPPort>
                <XMPPExt>gmail.com</XMPPExt>
                <XMPPUserName>multifactor1@gmail.com</XMPPUserName>
                <XMPPPassword>wso2carbon</XMPPPassword>
            </XMPPConfig>
        </XMPPSettings>
    </MultifactorAuthentication>

    <SSOService>
        <EntityId>${carbon.host}</EntityId>
        <!--
            Default value for IdentityProviderURL is  built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/samlsso
            If that doesn't satisfy uncomment the following config and explicitly configure the value
        -->
        <IdentityProviderURL>https://localhost:${carbon.management.port}/samlsso</IdentityProviderURL>
        <DefaultLogoutEndpoint>https://localhost:${carbon.management.port}/authenticationendpoint/samlsso_logout.do</DefaultLogoutEndpoint>
        <NotificationEndpoint>https://localhost:${carbon.management.port}/authenticationendpoint/samlsso_notification.do</NotificationEndpoint>
        <ArtifactResolutionEndpoint>https://localhost:${carbon.management.port}/samlartresolve</ArtifactResolutionEndpoint>
        <SingleLogoutRetryCount>5</SingleLogoutRetryCount>
        <SingleLogoutRetryInterval>60000</SingleLogoutRetryInterval>
        <!-- in milli seconds -->
        <TenantPartitioningEnabled>false</TenantPartitioningEnabled>
        <AttributesClaimDialect>http://wso2.org/claims</AttributesClaimDialect>
        <!--<SAMLSSOAssertionBuilder>org.wso2.carbon.identity.sso.saml.builders.assertion.ExtendedDefaultAssertionBuilder</SAMLSSOAssertionBuilder>-->
        <SAMLSSOAssertionBuilder>org.wso2.carbon.identity.sso.saml.builders.assertion.DefaultSAMLAssertionBuilder</SAMLSSOAssertionBuilder>
        <SAMLSSOEncrypter>org.wso2.carbon.identity.sso.saml.builders.encryption.DefaultSSOEncrypter</SAMLSSOEncrypter>
        <SAMLSSOSigner>org.wso2.carbon.identity.sso.saml.builders.signature.DefaultSSOSigner</SAMLSSOSigner>
        <SAML2HTTPRedirectSignatureValidator>org.wso2.carbon.identity.sso.saml.validators.SAML2HTTPRedirectDeflateSignatureValidator</SAML2HTTPRedirectSignatureValidator>
        <!--SAMLSSOResponseBuilder>org.wso2.carbon.identity.sso.saml.builders.DefaultResponseBuilder</SAMLSSOResponseBuilder-->

        <!-- SAML Token validity period in minutes -->
        <SAMLResponseValidityPeriod>5</SAMLResponseValidityPeriod>
        <UseAuthenticatedUserDomainCrypto>false</UseAuthenticatedUserDomainCrypto>
        <SAMLDefaultSigningAlgorithmURI>http://www.w3.org/2001/04/xmldsig-more#rsa-sha256</SAMLDefaultSigningAlgorithmURI>
        <SAMLDefaultDigestAlgorithmURI>http://www.w3.org/2001/04/xmlenc#sha256</SAMLDefaultDigestAlgorithmURI>
        <SAMLDefaultAssertionEncryptionAlgorithmURI>http://www.w3.org/2001/04/xmlenc#aes256-cbc</SAMLDefaultAssertionEncryptionAlgorithmURI>
        <SAMLDefaultKeyEncryptionAlgorithmURI>http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p</SAMLDefaultKeyEncryptionAlgorithmURI>
        <SLOHostNameVerificationEnabled>true</SLOHostNameVerificationEnabled>

        <SAML2ArtifactValidityPeriodInMinutes>4</SAML2ArtifactValidityPeriodInMinutes>
        <SAMLECPEndpoint>https://localhost:${carbon.management.port}/samlecp</SAMLECPEndpoint>
        <SAMLMetadataValidityPeriod>60</SAMLMetadataValidityPeriod>
        <SAMLMetadataSigningEnabled>false</SAMLMetadataSigningEnabled>
        <SAMLIDPMetadataEnableSHA256Alg>true</SAMLIDPMetadataEnableSHA256Alg>
        <SAMLSPMetadataParsingEnableSHA256Alg>true</SAMLSPMetadataParsingEnableSHA256Alg>
        <SAML2AuthenticationRequestValidityPeriodEnabled>false</SAML2AuthenticationRequestValidityPeriodEnabled>
        <!-- Request validity period in minutes-->
        <SAML2AuthenticationRequestValidityPeriod>5</SAML2AuthenticationRequestValidityPeriod>
        <SAMLSPCertificateExpiryValidationEnabled>true</SAMLSPCertificateExpiryValidationEnabled>
        <SAMLIdpInitLogoutResponseSigningEnabled>true</SAMLIdpInitLogoutResponseSigningEnabled>
        <SAML2AuthnRequestsSigningEnabled>false</SAML2AuthnRequestsSigningEnabled>
        <SAMLAssertionEncyptWithAppCert>true</SAMLAssertionEncyptWithAppCert>
        <ReturnValidNameIDFormat>false</ReturnValidNameIDFormat>
    </SSOService>

    <Consent>
        <!--Specify whether consent management should be enable during SSO.-->
        <EnableSSOConsentManagement>true</EnableSSOConsentManagement>
        <!--Specify whether consent should be prompted for subject claim uri if configured as a requested claim.-->
        <PromptSubjectClaimRequestedConsent>true</PromptSubjectClaimRequestedConsent>
    </Consent>

    <SecurityTokenService>
        <!--
            Default value for IdentityProviderURL is  built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/services/wso2carbon-sts
            If that doesn't satisfy uncomment the following config and explicitly configure the value
        -->
        <IdentityProviderURL>https://localhost:${carbon.management.port}/services/wso2carbon-sts</IdentityProviderURL>
        <LocalSubjectIdentifier>
            <IncludeUserStoreDomain>true</IncludeUserStoreDomain>
            <IncludeTenantDomain>false</IncludeTenantDomain>
        </LocalSubjectIdentifier>
    </SecurityTokenService>

    <PassiveSTS>
        <!--
            Default value for IdentityProviderURL is  built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/passivests
            If that doesn't satisfy uncomment the following config and explicitly configure the value
        -->
        <IdentityProviderURL>https://localhost:${carbon.management.port}/passivests</IdentityProviderURL>
        <RetryURL>https://localhost:${carbon.management.port}/authenticationendpoint/retry.do</RetryURL>
        <TokenStoreClassName>org.wso2.carbon.identity.sts.passive.utils.NoPersistenceTokenStore</TokenStoreClassName>
        <SLOHostNameVerificationEnabled>true</SLOHostNameVerificationEnabled>
        <DisableAppliesToInPassiveSTSResponse>false</DisableAppliesToInPassiveSTSResponse>
        <EnableDefaultSignatureAndDigestAlgorithm>true</EnableDefaultSignatureAndDigestAlgorithm>
        <EnableLogoutWreplyValidation>true</EnableLogoutWreplyValidation>
    </PassiveSTS>

    <UserAccountAssociation>
            <EnableSHA256Key>true</EnableSHA256Key>
    </UserAccountAssociation>

    <EntitlementSettings>
        <ThirftBasedEntitlementConfig>
            <EnableThriftService>false</EnableThriftService>
            <ReceivePort>${Ports.ThriftEntitlementReceivePort}</ReceivePort>
            <ClientTimeout>10000</ClientTimeout>
            <KeyStore>
                <Location>${carbon.home}/repository/resources/security/wso2carbon.p12</Location>
                <Password>wso2carbon</Password>
            </KeyStore>
            <!-- Enable this element to mention the host-name of your IS machine -->
            <ThriftHostName>${carbon.host}</ThriftHostName>
        </ThirftBasedEntitlementConfig>
        <XacmlPolicyStatus>
            <UseLastStatusOnly></UseLastStatusOnly>
        </XacmlPolicyStatus>
    </EntitlementSettings>

    <SCIM>
        <!--
            Default value for UserEPUrl and GroupEPUrl are built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/<context>/<path>
            If that doesn't satisfy uncomment the following config and explicitly configure the value
        -->
        <UserEPUrl>https://localhost:${carbon.management.port}/wso2/scim/Users</UserEPUrl>
        <GroupEPUrl>https://localhost:${carbon.management.port}/wso2/scim/Groups</GroupEPUrl>
        <ShowAllUserDetails>false</ShowAllUserDetails>
        <SCIMAuthenticators>
            <Authenticator class="org.wso2.carbon.identity.scim.provider.auth.BasicAuthHandler">
                <Property name="Priority">5</Property>
            </Authenticator>
            <Authenticator class="org.wso2.carbon.identity.scim.provider.auth.OAuthHandler">
                <Property name="AuthorizationServer">local://services</Property>
                <Property name="Priority">10</Property>
            </Authenticator>

            <!-- Flag to indicate advanced complex multiValued attributes support enabled or not.
            Default value : false
            Supported versions: IS 5.5.0 beta onwards
            -->
            <ComplexMultiValuedAttributeSupportEnabled>false</ComplexMultiValuedAttributeSupportEnabled>
        </SCIMAuthenticators>
    </SCIM>

    <SCIM2>
        <!--
            Default value for UserEPUrl and GroupEPUrl are built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/<context>/<path>
            If that doesn't satisfy uncomment the following config and explicitly configure the value
        -->
        <UserEPUrl>https://localhost:${carbon.management.port}/scim2/Users</UserEPUrl>
        <GroupEPUrl>https://localhost:${carbon.management.port}/scim2/Groups</GroupEPUrl>
        <ComplexMultiValuedAttributeSupportEnabled>false</ComplexMultiValuedAttributeSupportEnabled>
        <EnableFilteringEnhancements>false</EnableFilteringEnhancements>
        <NotifyUserstoreStatus>false</NotifyUserstoreStatus>

        <!--
                If you set the property value to true, regardless the Users endpoint and Groups endpoint, it will filter
                users or groups only from 'PRIMARY' user store.
                if the property value is false, it will filter users or groups across all user stores.
                Default value : false
                Supported versions : IS 5.8.0 onwards
            -->
        <FilterUsersAndGroupsOnlyFromPrimaryDomain>false</FilterUsersAndGroupsOnlyFromPrimaryDomain>

        <!--
            If you set the property value to true, regardless the Users endpoint and Groups endpoint, it will prepend
            "PRIMARY/" prefix in-front of the username and role(group) name which belong to PRIMARY user store.
            if the property value is false, "PRIMARY/" prefix will not be prepended.
            Default value : false
            Supported versions : IS 5.8.0 onwards
        -->
        <MandateDomainForUsernamesAndGroupNamesInResponse>false</MandateDomainForUsernamesAndGroupNamesInResponse>

        <!--
            There was a case where PRIMARY domain is not depicted with users being returned at all but only on groups.
            The purpose of this property is to ensure backward compatibility.
            If you set the property value to true, in Groups endpoint, it will prepend "PRIMARY/" prefix in-front of
            the role(group) name which belong to PRIMARY user store.
            if the property value is false, "PRIMARY/" prefix will not be prepended.
            Default value : false
            Supported versions : IS 5.8.0 onwards
        -->
        <MandateDomainForGroupNamesInGroupsResponse>false</MandateDomainForGroupNamesInGroupsResponse>

        <!--
            When the group PATCH operations are performed, by default the updated group is returned in the PATCH response.
            But when according to the spec(https://tools.ietf.org/html/rfc7644#section-3.5.2) if 'attributes' are
            not requested, we can return a 204 response without the update group information.

            This behaviour to return a 204 response can be enabled by setting the value to false.

            Default value : true
            Supported versions : IS 5.9.0 onwards
        -->
        <ReturnUpdatedGroupInPatchResponse>true</ReturnUpdatedGroupInPatchResponse>

        <!--
            If you set the property value to true, the response of the users endpoint would not contain duplicate user entries.

            Default value : false
            Supported versions : IS 5.10.0 onwards
        -->
        <RemoveDuplicateUsersInUsersResponse>false</RemoveDuplicateUsersInUsersResponse>
        <!--
           If you want to get the total result in scim endpoint to stick with max limit then enable this property value.

           Default value : false
           Supported versions : IS 5.11.0 onwards
        -->
        <ConsiderMaxLimitForTotalResult>false</ConsiderMaxLimitForTotalResult>

        <!--
             If you want to get the total records matching the client query as 'totalResult' for LDAP when filter criteria is given
             then enable this property value.
             Please note that for the request without filtering, LDAP will give items per page as 'totalResult' regardless of this property value.
             Default value : false
             Supported versions : IS 5.10.0 onwards
        -->
        <ConsiderTotalRecordsForTotalResultOfLDAP>false</ConsiderTotalRecordsForTotalResultOfLDAP>

        <!--
             This configuration enhances the behavior of the SCIM2 API User Endpoint when invoked with a group-based filter.
             It determines the totalResults based on the total user count corresponding to the given group-based filter.
             Additionally, when invoking the user endpoint with a groups filter by passing a role (hybrid or system roles),
             it returns an empty list when role group separation is enabled, instead of returning users linked to the passed role.
             Default value : true
        -->
        <EnableGroupBasedUserFilteringImprovements>true</EnableGroupBasedUserFilteringImprovements>

        <!--
             If you want to remove the limit set for the count query parameter of SCIM2 Users Endpoint then disable this
             property value.

             Default value : true
             Supported versions : IS 7.0.0 onwards
        -->
        <UserEndpointMaxItemsPerPageEnabled>true</UserEndpointMaxItemsPerPageEnabled>
        <!--
            This configuration is added to consider the server-wide user endpoint max limit when the count query parameter is used.
            Default value : true
            Supported versions : IS 7.1.0 onwards
        -->
        <ConsiderServerWideUserEndpointMaxLimit>true</ConsiderServerWideUserEndpointMaxLimit>

        <!--
            If you want to get the error code appended to the password policy violation error detail,
            then enable this property value.
            Default value : false
            Supported versions : IS 6.0.0 onwards
        -->
    </SCIM2>

      <PasswordPolicy>
          <MaxPasswordAllowedLength>64</MaxPasswordAllowedLength>
          <PasswordPolicyValidationHandler>
            <Enable></Enable>
        </PasswordPolicyValidationHandler>
      </PasswordPolicy>
      <Recovery>
        <EnableV1API>false</EnableV1API>
        <ReCaptcha>
            <Password>
                <Enable>false</Enable>
            </Password>
            <Username>
                <Enable>false</Enable>
            </Username>
        </ReCaptcha>
        <Notification>
            <ExpiryTime>
                <!--Validity period of the recovery code given when username or password recovery is initiated-->
                <RecoveryCode>1</RecoveryCode>
                <!--Validity period of the resend code given during user account recovery-->
                <ResendCode>2</ResendCode>
            </ExpiryTime>
            <Password>
                <Enable>false</Enable>
                <ExpiryTime>
                    <smsOtp>1</smsOtp>
                </ExpiryTime>
                <OTP>
                    <SendOTPInEmail>false</SendOTPInEmail>
                    <UseUppercaseInOtp>true</UseUppercaseInOtp>
                    <UseLowercaseInOtp>true</UseLowercaseInOtp>
                    <UseNumericInOtp>true</UseNumericInOtp>
                    <OTPLength>6</OTPLength>
                    <SendOnlyOTPAsConfirmationCode>false</SendOnlyOTPAsConfirmationCode>
                </OTP>
                <smsOtp>
                    <Regex>[a-zA-Z0-9]{6}</Regex>
                </smsOtp>
                <!-- Email channel specific properties can be added here. -->
                <Email>
                <!--
                    This property was introduced to keep the email confirmation code tolerance time period value of the
                    password recovery scenario. This can be configured in minutes and must be lower that confirmation
                    code expiry time. If the following requests to a corresponding user for password recovery or
                    resend confirmation code within this configured value, the existing confirmation code will be
                    send again in the email. If this was not configured, a default value of zero (0) will be set
                    from internally.
                -->
                </Email>
            </Password>
            <Username>
                <NonUniqueUsername>false</NonUniqueUsername>
                <Enable>false</Enable>
            </Username>
            <InternallyManage>true</InternallyManage>
       </Notification>
       <Question>
            <Password>
                <Enable>false</Enable>
                <NotifyStart>false</NotifyStart>
                <Separator>!</Separator>
                <MinAnswers>2</MinAnswers>
                <ReCaptcha>
                    <Enable>true</Enable>
                    <MaxFailedAttempts>2</MaxFailedAttempts>
                </ReCaptcha>
                <Forced>
                    <Enable>false</Enable>
                </Forced>
                <SkipOnInsufficientAnswers>true</SkipOnInsufficientAnswers>
            </Password>
            <Answer>
                <Regex>.*</Regex>
                <Uniqueness>false</Uniqueness>
            </Answer>
             <!--
                The purpose of this property is to configure minimum number of challenge questions to be answered
                by the user.
                Default value : 1
                If this property is configured to a positive integer, user must answer more or equal to that number of
                questions.
             -->
            <MinQuestionsToAnswer>1</MinQuestionsToAnswer>
        </Question>
        <ExpiryTime>1440</ExpiryTime>
        <NotifySuccess>false</NotifySuccess>
        <AdminPasswordReset>
            <Offline>false</Offline>
            <OTP>false</OTP>
            <RecoveryLink>false</RecoveryLink>
            <AccountLockNotification>false</AccountLockNotification>
            <AccountUnlockNotification>false</AccountUnlockNotification>
            <ExpiryTime>1440</ExpiryTime>
        </AdminPasswordReset>
        <NotifyUserExistence>false</NotifyUserExistence>
        <!-- Whether to notify if the email is not found for the user in the recovery flow by showing an error page. -->
        <NotifyRecoveryEmailExistence>false</NotifyRecoveryEmailExistence>
        <!--Whether to notify the user if the user account is locked/disabled-->
        <NotifyUserAccountStatus>false</NotifyUserAccountStatus>
        <CallbackRegex>${carbon.protocol}:\/\/${carbon.host}:${carbon.management.port}\/.*</CallbackRegex>
        <ErrorMessage>
            <EnableDetailedErrorMessages>false</EnableDetailedErrorMessages>
        </ErrorMessage>
        <AutoLogin>
            <Enable>false</Enable>
        </AutoLogin>
    </Recovery>

    <Notification>
        <DefaultNotificationChannel>EMAIL</DefaultNotificationChannel>
        <ResolveNotificationChannels>
            <Enable>false</Enable>
        </ResolveNotificationChannels>
        <DefaultLocale></DefaultLocale>
    </Notification>

    <EmailVerification>
        <Enable>false</Enable>
        <OTP>
            <SendOTPInEmail>false</SendOTPInEmail>
            <UseUppercaseInOtp>true</UseUppercaseInOtp>
            <UseLowercaseInOtp>true</UseLowercaseInOtp>
            <UseNumericInOtp>true</UseNumericInOtp>
            <OTPLength>6</OTPLength>
        </OTP>
        <ExpiryTime>1440</ExpiryTime>
        <LockOnCreation>true</LockOnCreation>
        <Notification>
            <InternallyManage>true</InternallyManage>
        </Notification>
        <AskPassword>
            <ExpiryTime>1440</ExpiryTime>
            <PasswordGenerator>org.wso2.carbon.user.mgt.common.DefaultPasswordGenerator</PasswordGenerator>
            <DisableRandomValueForCredentials>false</DisableRandomValueForCredentials>
            <Notification>
                <!--
                    This property was introduced to keep the email confirmation code tolerance time period value of the
                    ask password scenario. This can be configured in minutes and must be lower that confirmation
                    code expiry time for ask password. If the following config is configured, the existing confirmation
                    code will be send again in the email when user ask for resend code. If this was not configured, a
                    default value of zero (0) will be set internally.
                -->
            </Notification>
        </AskPassword>
        <DisableNotifyUnlockState>false</DisableNotifyUnlockState>
    </EmailVerification>

    <TenantRegistrationVerification>
        <AskPassword>
        <ExpiryTime>1440</ExpiryTime>
        </AskPassword>
    </TenantRegistrationVerification>

    <SelfRegistration>
        <Enable>false</Enable>
        <OTP>
            <SendOTPInEmail>false</SendOTPInEmail>
            <UseUppercaseInOtp>true</UseUppercaseInOtp>
            <UseLowercaseInOtp>true</UseLowercaseInOtp>
            <UseNumericInOtp>true</UseNumericInOtp>
            <OTPLength>6</OTPLength>
        </OTP>
        <EnableAccountLockForVerifiedPreferredChannel>true</EnableAccountLockForVerifiedPreferredChannel>
        <API>
            <EnableDetailedResponseBody>false</EnableDetailedResponseBody>
        </API>
        <LockOnCreation>true</LockOnCreation>
        <SendConfirmationOnCreation>false</SendConfirmationOnCreation>
        <NotifyAccountConfirmation>false</NotifyAccountConfirmation>
        <Notification>
            <InternallyManage>true</InternallyManage>
            <Email>
                <!--
                    This property was introduced to keep the email confirmation code tolerance time period value of the
                    self registration scenario using EMAIL channel. This can be configured in minutes and must be lower
                    that confirmation code expiry time for self registration. If the following config is configured, the
                    existing confirmation code will be send again in the email when user ask for resend code. If this
                    was not configured, a default value of zero (0) will be set internally.
                -->
            </Email>
            <SMS>
                <!--
                    This property was introduced to keep the email confirmation code tolerance time period value of the
                    self registration scenario using SMS channel. This can be configured in minutes and must be lower
                    that confirmation code expiry time for self registration using SMS channel. If the following config
                    is configured, the existing confirmation code will be send again in the email when user ask for
                    resend code. If this was not configured, a default value of zero (0) will be set internally.
                -->
            </SMS>
        </Notification>
        <ReCaptcha>true</ReCaptcha>
        <VerificationCode>
            <ExpiryTime>1440</ExpiryTime>
        </VerificationCode>
        <CallbackRegex>${carbon.protocol}:\/\/${carbon.host}:${carbon.management.port}\/.*</CallbackRegex>
        <ResendConfirmationReCaptcha>false</ResendConfirmationReCaptcha>
        <AutoLogin>
            <Enable>false</Enable>
            <AliasName>wso2carbon</AliasName>
        </AutoLogin>
    </SelfRegistration>

    <LiteRegistration>
        <Enable>false</Enable>
        <LockOnCreation>true</LockOnCreation>
        <Notification>
            <InternallyManage>true</InternallyManage>
        </Notification>
        <ReCaptcha>true</ReCaptcha>
        <VerificationCode>
            <ExpiryTime>1440</ExpiryTime>
            <SMSOTP>
                <ExpiryTime>1</ExpiryTime>
            </SMSOTP>
        </VerificationCode>
        <CallbackRegex>${carbon.protocol}:\/\/${carbon.host}:${carbon.management.port}\/.*</CallbackRegex>
        <ResendVerificationOnUserExistence>false</ResendVerificationOnUserExistence>
    </LiteRegistration>

    <LoginIdentifiers>
        <Enable>false</Enable>
        <PrimaryLoginIdentifier>http://wso2.org/claims/username</PrimaryLoginIdentifier>
    </LoginIdentifiers>

    <UserClaimUpdate>
        <Claim uri = "http://wso2.org/claims/emailaddress">
            <VerificationOnUpdate>
                <Enable>false</Enable>
                <VerificationCode>
                    <ExpiryTime>1440</ExpiryTime>
                </VerificationCode>
            </VerificationOnUpdate>
            <NotificationOnUpdate>
                <Enable>false</Enable>
             </NotificationOnUpdate>
        </Claim>
        <Claim uri = "http://wso2.org/claims/mobile">
             <VerificationOnUpdate>
                <Enable>false</Enable>
                <EnableVerificationByPrivilegedUser>false</EnableVerificationByPrivilegedUser>
                <VerificationCode>
                    <ExpiryTime>5</ExpiryTime>
                </VerificationCode>
             </VerificationOnUpdate>
        </Claim>
        <OTP>
            <SendOTPInEmail>false</SendOTPInEmail>
            <UseUppercaseInOtp>true</UseUppercaseInOtp>
            <UseLowercaseInOtp>true</UseLowercaseInOtp>
            <UseNumericInOtp>true</UseNumericInOtp>
            <OTPLength>6</OTPLength>
        </OTP>
        <!-- When updating the claim value, the verification notification can be controlled by sending an additional
        temporary claim ('verifyEmail'/'verifyMobile') along with the update request. To enable this option,
        'UseVerifyClaim' should be set to true. -->
        <UseVerifyClaim>false</UseVerifyClaim>
          <!-- When updating the claim value, it can be validated against the provided regex pattern.
          To enable this option,'EnableUserClaimInputRegexValidation' should be set to true. -->
          <EnableUserClaimInputRegexValidation>true</EnableUserClaimInputRegexValidation>

        <!-- Enable support for storing multiple email addresses and mobile numbers per user. -->
        <EnableMultipleEmailsAndMobileNumbers>true</EnableMultipleEmailsAndMobileNumbers>

        <!-- 
            Defines the scope for which claim uniqueness validation should happen, this can be either within userstore
            or across userstore. This config is already defined in the EventListener with 
            id="unique_claim_user_operation_event_listener" of type "UserOperationEventListener".
        -->
        <UniquenessValidation>
            <ScopeWithinUserstore>false</ScopeWithinUserstore>
        </UniquenessValidation>
        <AllowedAttributeProfiles></AllowedAttributeProfiles>
    </UserClaimUpdate>

     <AccountSuspension>
        <UseIdentityClaims>true</UseIdentityClaims>
        <ExecuteTaskOnMasterNode>false</ExecuteTaskOnMasterNode>
     </AccountSuspension>

     <SCIM2MultiAttributeFiltering>
        <UsePagination>false</UsePagination>
     </SCIM2MultiAttributeFiltering>

     <OrgWiseMultiAttributeSeparator>false</OrgWiseMultiAttributeSeparator>

     <!--This configuration is for enable/disable reCaptcha feature by default.
     The default configuration is to disable the reCaptcha by default. These configuration can be overrided
     tenant wise.-->
     <SSOLogin>
          <Recaptcha>
               <!--This configuration is the default configuration for enabling reCaptcha in login flow.
               Enabling this configuration will prompt reCaptcha after max failed attempts.-->
               <Enabled>false</Enabled>

               <!--Enabling this configuration will always prompt reCaptcha despite of max failed attempts.-->
               <EnableAlways>false</EnableAlways>

               <!--This configuration will set max failed attempts for reCaptcha.-->
               <MaxAttempts>3</MaxAttempts>
          </Recaptcha>
    </SSOLogin>

    <!--
         This configuration is used to filter the SP configured role mappings. If the property value is,

         true : If SP role mappings are configured, returns only the mapped SP roles. If SP role mappings are not
         configured returns all the mapped local roles.

         false : If SP role mappings are configured, returns mapped SP roles for the mapped roles and the local mapped
         roles for others. If SP role mappings are not configured returns all the mapped local roles.

         Default - false.
     -->

    <SPRoleManagement>
        <ReturnOnlyMappedLocalRoles>false</ReturnOnlyMappedLocalRoles>
    </SPRoleManagement>

    <!--
        This configuration is used to filter the federated IDP configured role mappings. If the property value is,
        true : If IDP role mapping available, it will return the configured role mappings .
        false : If there is no IDP role mapping and If the remote role and local role names are matching it will allow
        to returns all the unmapped roles.
    -->

    <FederatedRoleManagement>
        <!--
            This configuration is used to send only the mapped local roles.
            The default value of the configuration is set to true.
            Disabling this configuration is only recommended for the backward compatibility with the previous behaviour
            of IDP role to local role mappings if needed.
        -->
        <ReturnOnlyMappedLocalRoles>true</ReturnOnlyMappedLocalRoles>
        <ReturnManuallyAddedLocalRoles>true</ReturnManuallyAddedLocalRoles>
    </FederatedRoleManagement>

    <EnableAskPasswordAdminUI>true</EnableAskPasswordAdminUI>

    <EnableRecoveryEndpoint>true</EnableRecoveryEndpoint>
    <EnableSelfSignUpEndpoint>true</EnableSelfSignUpEndpoint>

    <AuthenticationPolicy>
        <CheckAccountExist>true</CheckAccountExist>
    </AuthenticationPolicy>

    <!-- Show authenticated user name in audit logs. -->
    <Authentication>
        <Audit>
            <UserNameEnableForAuditLogs>false</UserNameEnableForAuditLogs>
        </Audit>
    </Authentication>

    <!--
        Enabling this configuration will do the following modifications to the logs.
            1. Initiator of the audit logs will be changed to userId if userId is resolvable.
            2. Initiator of the audit logs will be a masked username in the scenarios where userId is not resolvable.
            3. PII, user claims and other sensitive information will be masked from logs.
     -->
    <MaskingLogs>
            <Enabled>true</Enabled>
    </MaskingLogs>

    <JITProvisioning>
        <UserNameProvisioningUI>/accountrecoveryendpoint/register.do</UserNameProvisioningUI>
        <AutofillUsernameFieldWithSubjectAttribute>true</AutofillUsernameFieldWithSubjectAttribute>
        <PasswordProvisioningUI>/accountrecoveryendpoint/signup.do</PasswordProvisioningUI>
        <FailAuthnOnProvisionFailure>false</FailAuthnOnProvisionFailure>
        <SkipUsernamePatternValidation>false</SkipUsernamePatternValidation>
        <EnableEnhancedFeature>false</EnableEnhancedFeature>
        <!-- Claims which must not delete during the syncing process of existing claim mappings with IDP claim mappings
        for JIT provisioned user. -->
        <IndelibleClaims>
                <ClaimURI>http://wso2.org/claims/userid</ClaimURI>
                <ClaimURI>http://wso2.org/claims/username</ClaimURI>
                <ClaimURI>http://wso2.org/claims/resourceType</ClaimURI>
                <ClaimURI>http://wso2.org/claims/roles</ClaimURI>
                <ClaimURI>http://wso2.org/claims/created</ClaimURI>
                <ClaimURI>http://wso2.org/claims/modified</ClaimURI>
                <ClaimURI>http://wso2.org/claims/groups</ClaimURI>
                <ClaimURI>http://wso2.org/claims/userprincipal</ClaimURI>
        </IndelibleClaims>
        <AllowAssociatingToExistingUser>false</AllowAssociatingToExistingUser>
        <EnableConfiguredIdpSubForFederatedUserAssociation>false</EnableConfiguredIdpSubForFederatedUserAssociation>
    </JITProvisioning>

    <!--Application management service configurations-->
    <ApplicationMgt>
        <!--
        Enabling this configuration will enable validating the application role for the user who initiates the
        application operations. Enabling this configuration will create application role for newly created SPs and
        the application role will be assigned to the app owner.
        The default value of the configuration is false.
        -->
        <EnableRoleValidation>false</EnableRoleValidation>
        <TrustedAppConsentRequired>false</TrustedAppConsentRequired>
        <TrustedAppMaxThumbprintCount>20</TrustedAppMaxThumbprintCount>
    </ApplicationMgt>

    <!--Role management service configurations-->
    <RoleMgt>
    </RoleMgt>

    <OutboundProvisioning>
            <!--
            Disabling this configuration will allow to keep the provisioned entities as it is and  will update the outbound
            provisioning config rather than deleting the existing entries and add them as the new entries whenever updating
            the provisioning connector configurations.
            The default value of the configuration is true.
            -->
            <ResetProvisioningEntitiesOnConfigUpdate>true</ResetProvisioningEntitiesOnConfigUpdate>
        <enableApplicationBasedOutboundProvisioning>false</enableApplicationBasedOutboundProvisioning>
        <FailOnBlockingOutboundProvisionFailure>false</FailOnBlockingOutboundProvisionFailure>
    </OutboundProvisioning>

    <Actions>
        <HTTPClient>
            <HTTPConnectionTimeout>2000.0</HTTPConnectionTimeout>
            <HTTPReadTimeout>5000.0</HTTPReadTimeout>
            <HTTPConnectionRequestTimeout>2000.0</HTTPConnectionRequestTimeout>
            <HTTPConnectionPoolSize>20.0</HTTPConnectionPoolSize>
            <HTTPRequestRetryCount>2.0</HTTPRequestRetryCount>
        </HTTPClient>
        <MaximumActionsPerActionType>1.0</MaximumActionsPerActionType>
        <ActionRequest>
            <ExcludedHeaders>
            </ExcludedHeaders>
            <ExcludedParameters>
            </ExcludedParameters>
        </ActionRequest>
        <Types>
            <PreIssueAccessToken>
                <Enable>true</Enable>
                <ActionRequest>
                    <ExcludedHeaders>
                    </ExcludedHeaders>
                    <ExcludedParameters>
                    </ExcludedParameters>
                    <AllowedHeaders>
                    </AllowedHeaders>
                    <AllowedParameters>
                    </AllowedParameters>
                </ActionRequest>
            </PreIssueAccessToken>
            <Authentication>
                <Enable>true</Enable>
                <DefaultUserStore>PRIMARY</DefaultUserStore>
                <ActionRequest>
                    <AllowedParameters>
                            <Parameter>biometric-template</Parameter>
                    </AllowedParameters>
                </ActionRequest>
            </Authentication>
        </Types>
    </Actions>

    <EventListeners>
        <EventListener id="input_validation"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.input.validation.mgt.listener.InputValidationListener"
                       orderId="3"
                       enable="true"/>
        <EventListener id="identity_mgt"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.mgt.IdentityMgtEventListener"
                       orderId="50"
                       enable="false"/>
        <!-- Enable the following SCIM 1.1 event listener and disable the SCIM2 event listener if SCIM 1.1 is
        used. -->
        <EventListener id="scim"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.scim.common.listener.SCIMUserOperationListener"
                       orderId="90"
                       enable="false"/>
        <EventListener id="scim"
                       type="org.wso2.carbon.stratos.common.listeners.TenantMgtListener"
                       name="org.wso2.carbon.identity.scim.common.listener.SCIMTenantMgtListener"
                       orderId="-1"
                       enable="true"/>
        <EventListener id="scim2"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.scim2.common.listener.SCIMUserOperationListener"
                       orderId="93"
                       enable="true"/>
        <EventListener id="scim2"
                       type="org.wso2.carbon.stratos.common.listeners.TenantMgtListener"
                       name="org.wso2.carbon.identity.scim2.common.listener.SCIMTenantMgtListener"
                       orderId="-1"
                       enable="true"/>
        <EventListener id="pre_update_password_action"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.user.action.internal.listener.ActionUserOperationEventListener"
                       orderId="10000"
                       enable="true"/>
        <EventListener id="governance_identity_mgt"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.governance.listener.IdentityMgtEventListener"
                       orderId="95"
                       enable="true"/>
        <EventListener id="governance_identity_store"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.governance.listener.IdentityStoreEventListener"
                       orderId="97"
                       enable="true">
            <Property name="Data.Store">org.wso2.carbon.identity.governance.store.JDBCIdentityDataStore</Property>
            <!-- By enabling this, it will use the userstore attribute values for identity claims if the identity data
            store value is empty for corresponding claim. -->
            <Property name="EnableHybridDataStore">false</Property>
        </EventListener>
        <EventListener id="password_expiry"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.password.expiry.listener.PasswordExpiryEventListener"
                       orderId="118"
                       enable="true"/>
        <EventListener id="application_authentication"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityMessageHandler"
                       name="org.wso2.carbon.identity.data.publisher.application.authentication.AuthnDataPublisherProxy"
                       orderId="11"
                       enable="true"/>
        <EventListener id="oauth_listener"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                       name="org.wso2.carbon.identity.data.publisher.oauth.listener.OAuthTokenIssuanceLogPublisher"
                       orderId="12"
                       enable="false">
            <Property name="Log.Token">false</Property>
        </EventListener>
        <EventListener id="mutual_tls_authenticator"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                       name="org.wso2.carbon.identity.oauth2.token.handler.clientauth.mutualtls.MutualTLSClientAuthenticator"
                       orderId="919"
                       enable="true">
        </EventListener>
        <EventListener id="private_key_jwt_authenticator"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                       name="org.wso2.carbon.identity.oauth2.token.handler.clientauth.jwt.PrivateKeyJWTClientAuthenticator"
                       orderId="899"
                       enable="true">
            <Property name="PreventTokenReuse">false</Property>
            <Property name="RejectBeforeInMinutes">100</Property>
        </EventListener>

        <!-- Basic OAuth client authenticator -->
        <EventListener id="basic_auth_client_authenticator"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                       name="org.wso2.carbon.identity.oauth2.client.authentication.BasicAuthClientAuthenticator"
                       orderId="100"
                       enable="true"/>

        <!-- Post Authentication handler for email domain based organization discovery -->
        <EventListener id="email_domain_validation_handler"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                       name="org.wso2.carbon.identity.organization.discovery.service.listener.EmailDomainValidationHandler"
                       orderId="15"
                       enable="true"/>

        <!-- Enable this listener to call DeleteEventRecorders. -->
        <EventListener id="user_deletion"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.user.mgt.listeners.UserDeletionEventListener"
                       orderId="98"
                       enable="false"/>
        <EventListener id="consent_mgt_handler"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                       name="org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.consent.ConsentMgtPostAuthnHandler"
                       orderId="110"
                       enable="true"/>
        <EventListener id="user_session_termination"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.mgt.listener.UserSessionTerminationListener"
                       orderId="85"
                       enable="true"/>


        <!-- Post Authentication handlers for JIT provisioning, association and for handling subject identifier -->
        <EventListener id="jit_provisioning_handler"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                       name="org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.JITProvisioningPostAuthenticationHandler"
                       orderId="20"
                       enable="true"/>
        <EventListener id="post_auth_association_handler"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                       name="org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.PostAuthAssociationHandler"
                       orderId="25"
                       enable="true"/>
        <EventListener id="subject_identifier_handler"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                       name="org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.PostAuthenticatedSubjectIdentifierHandler"
                       orderId="30"
                       enable="true"/>
        <EventListener id="failed_lockout_count_handler"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                       name="org.wso2.carbon.identity.handler.event.account.lock.handlers.PostAuthnFailedLockoutClaimHandler"
                       orderId="21"
                       enable="true"/>

        <!-- Special UserOperationEventListeners to preserve the backward compatibility with the new unique user ID
                related APIs  -->
                <EventListener id="username_resolver"
                               type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                               name="org.wso2.carbon.identity.mgt.listener.IdentityUserNameResolverListener"
                               orderId="14"
                               enable="true"/>
                <EventListener id="userid_resolver"
                               type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                               name="org.wso2.carbon.identity.mgt.listener.IdentityUserIdResolverListener"
                               orderId="9999"
                               enable="true"/>
                <EventListener id="claim_encryption"
                               type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                               name="org.wso2.carbon.identity.mgt.listener.IdentityClaimValueEncryptionListener"
                               orderId="13"
                               enable="true"/>

        <!-- Audit Loggers -->

        <!-- Old Audit Logger -->
        <EventListener id="user_mgt_audit_logger"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.user.mgt.listeners.UserMgtAuditLogger"
                       orderId="0"
                       enable="false"/>

        <!-- New Audit Loggers-->
        <EventListener id="user_management_audit_logger"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.user.mgt.listeners.UserManagementAuditLogger"
                       orderId="1"
                       enable="true"/>
        <EventListener id="user_failure_audit_logger"
                       type="org.wso2.carbon.user.core.listener.UserManagementErrorEventListener"
                       name="org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLogger"
                       orderId="0"
                       enable="true"/>
       <EventListener id="unique_claim_user_operation_event_listener"
                      type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                      name="org.wso2.carbon.identity.unique.claim.mgt.listener.UniqueClaimUserOperationEventListener"
                      orderId="101"
                      enable="false"/>
        <EventListener id="user_claim_audit_logger"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.user.mgt.listeners.UserClaimsAuditLogger"
                       orderId="9"
                       enable="false">
            <Property name="LogUpdatedClaimsOnly">false</Property>
        </EventListener>
        <EventListener id="client_certificate_authentication_handler"
                       type="org.wso2.carbon.identity.core.handler.AbstractIdentityMessageHandler"
                       name="org.wso2.carbon.identity.auth.service.handler.impl.ClientCertificateBasedAuthenticationHandler"
                       orderId="10"
                       enable="true"/>

        <!-- New V2 Audit Loggers-->
         <EventListener id="user_management_v2_audit_logger"
                               type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                               name="org.wso2.carbon.user.mgt.listeners.UserManagementV2AuditLogger"
                               orderId="150"
                               enable="true"/>
          <EventListener id="role_management_v2_audit_logger"
                                type="org.wso2.carbon.identity.role.v2.mgt.core.listener"
                                name="org.wso2.carbon.identity.role.v2.mgt.core.listener.RoleManagementV2AuditLogger"
                                orderId="3"
                                enable="true"/>

          <EventListener id="group_management_v2_audit_logger"
                                         type="org.wso2.carbon.user.core.listener.GroupOperationEventListener"
                                         name="org.wso2.carbon.user.mgt.listeners.GroupManagementV2AuditLogger"
                                         orderId="10"
                                         enable="true"/>

        <!-- B2B organization management Event Listeners -->
        <EventListener id="fragment_app_mgt_listener"
                       type="org.wso2.carbon.identity.application.mgt.listener.ApplicationMgtListener"
                       name="org.wso2.carbon.identity.organization.management.application.listener.FragmentApplicationMgtListener"
                       orderId="50"
                       enable="true"/>

        <EventListener id="organization_user_operation_listener"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.organization.management.role.management.service.listener.OrganizationUserOperationEventListener"
                       orderId="115"
                       enable="true"/>
        <EventListener id="organization_discovery_user_operation_listener"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.organization.discovery.service.listener.OrganizationDiscoveryUserOperationListener"
                       orderId="114"
                       enable="true"/>
        <EventListener id="organization_user_association_listener"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.organization.management.organization.user.sharing.listener.SharedUserOperationEventListener"
                       orderId="128"
                       enable="true"/>
        <EventListener id="shared_user_profile_update_governance_listener"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.organization.management.organization.user.sharing.listener.SharedUserProfileUpdateGovernanceEventListener"
                       orderId="8"
                       enable="true"/>

        <!-- Role based outbound provision management Event Listener -->
                <EventListener id="provisioning_role_mgt_listener"
                               type="org.wso2.carbon.identity.role.v2.mgt.core.listener.RoleManagementListener"
                               name="org.wso2.carbon.identity.provisioning.listener.ProvisioningRoleMgtListener"
                               orderId="999"
                               enable="true"/>

        <!-- Introspection Data Providers -->
        <EventListener id="is_introspection_data_provider" type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                name="org.wso2.carbon.identity.oauth2.token.handler.clientauth.mutualtls.introspection.ISIntrospectionDataProvider"
                orderId="162"
                enable="false">
        </EventListener>

            <EventListener id="unique_claim_user_operation_event_listener" type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                    name="org.wso2.carbon.identity.unique.claim.mgt.listener.UniqueClaimUserOperationEventListener"
                    orderId="2"
                    enable="true">
                    <Property name="ScopeWithinUserstore">false</Property>
            </EventListener>

        <EventListener id="basic_user_info_provider" type="org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
                       name="org.wso2.carbon.identity.user.export.core.internal.service.impl.BasicUserInformationProvider"
                       orderId="91"
                       enable="false">
        </EventListener>

        <!-- User Identity Verification Event Listener -->
        <EventListener id="identity_verification_event_listener"
                       type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.extension.identity.verification.mgt.listeners.IdVUserOperationEventListener"
                       orderId="120"
                       enable="true"/>

        <!-- Custom Event Listeners -->
        <EventListener id="provision_error_listener"
                type="org.wso2.carbon.user.core.listener.UserManagementErrorEventListener"
                name="org.wso2.carbon.identity.provisioning.listener.ProvisioningErrorListener"
                orderId="1"
                enable="true">
        </EventListener>
    </EventListeners>

    <Analytics>
        <!-- By default value of analytics.publish_active_session_count is set to false so that the identity server
        publishes session data to the stream org.wso2.is.analytics.stream.OverallSession:1.0.0.
        When this configuration is enabled, the stream definition org.wso2.is.analytics.stream.OverallSession:1.0.1
        is used and the current active session count of the identity server will be added as an attribute. Enable it
        by setting analytics.publish_active_session_count = true -->
    </Analytics>

    <!-- These recorders are used to write user delete information to specific sources. Default event recorder is CSV
     file recorder. This recorder is disabled by default. Enable it by setting enable="true". To run these recorders,
     EventListener "rg.wso2.carbon.user.mgt.listeners.UserDeletionEventListener" also should be enabled. Which is
     also disabled by default. -->
    <UserDeleteEventRecorders>
        <UserDeleteEventRecorder name="org.wso2.carbon.user.mgt.recorder.DefaultUserDeletionEventRecorder"
                                 enable="false">
        </UserDeleteEventRecorder>


    </UserDeleteEventRecorders>

    <CacheConfig>
        <!-- Identity cache configuration.
             Timeouts are in seconds.
             Capacity is the maximum cache size.
             Unless specifically mentioned, you do not need to set the isDistributed flag.
         -->
        <CacheManager name="IdentityApplicationManagementCacheManager">
            <Cache id="framework_session_context_cache" name="AppAuthFrameworkSessionContextCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="authentication_context_cache" name="AuthenticationContextCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="authentication_request_cache" name="AuthenticationRequestCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="authentication_result_cache" name="AuthenticationResultCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="authentication_error_cache" name="AuthenticationErrorCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="app_info_cache" name="AppInfoCache"
                   enable="true"
                   timeout="900"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="authorization_grant_cache" name="AuthorizationGrantCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="jwks_cache" name="JWKSCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="oauth_cache" name="OAuthCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="oauth_scope_cache" name="OAuthScopeCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="oauth_session_data_cache" name="OAuthSessionDataCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="saml_sso_participant_cache" name="SAMLSSOParticipantCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="saml_sso_session_index_cache" name="SAMLSSOSessionIndexCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="saml_sso_session_data_cache" name="SAMLSSOSessionDataCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="service_provider_cache" name="ServiceProviderCache"
                   enable="true"
                   timeout="900"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="service_provider_cache_id" name="ServiceProviderCache.ID"
                   enable="true"
                   timeout="900"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="service_provider_cache_inbound_auth" name="ServiceProvideCache.InboundAuth"
                   enable="true"
                   timeout="900"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="provisioning_connector_cache" name="ProvisioningConnectorCache"
                   enable="true"
                   timeout="900"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="provisioning_entity_cache" name="ProvisioningEntityCache"
                   enable="true"
                   timeout="900"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="service_provider_provisioning_connector_cache" name="ServiceProviderProvisioningConnectorCache"
                   enable="true"
                   timeout="900"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="idp_cache_by_auth_property" name="IdPCacheByAuthProperty"
                   enable="true"
                   timeout="900"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="idp_cache_by_hri" name="IdPCacheByHRI"
                   enable="true"
                   timeout="900"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="idp_cache_by_name" name="IdPCacheByName"
                   enable="true"
                   timeout="900"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="private_key_jwt" name="PrivateKeyJWT"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="push_auth_context_cache" name="PushAuthContextCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
            <Cache id="push_auth_status_cache" name="PushAuthStatusCache"
                   enable="true"
                   timeout=""
                   capacity=""
                   isDistributed="false"/>
            <Cache id="push_device_registration_request_cache" name="PushDeviceRegistrationRequestCache"
                   enable="true"
                   timeout="300"
                   capacity="5000"
                   isDistributed="false"/>
        </CacheManager>

        <!-- Add custom CacheManager -->

    </CacheConfig>

    <EnableSessionNonceCookie>true</EnableSessionNonceCookie>

        <SessionNonceCookie>
            <WhitelistedAuthenticator>MagicLinkAuthenticator</WhitelistedAuthenticator>
        </SessionNonceCookie>

    <!-- Config to enable performing validations for expired authentication context cache entry. -->
    <EnableAuthenticationContextExpiryValidation>true</EnableAuthenticationContextExpiryValidation>



    <ResourceAccessControl default-access="deny">
        <Resource context="(.*)/lsp/(.*)" secured="true" http-method="all"/>
        <Resource context="(.*)" secured="false" http-method="OPTIONS"/>
        <Resource context="/" secured="false" http-method="GET"/>
        <Resource context="(.*)/api/identity/user/v1.0/validate-code(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/identitymgt</Permissions>
            <Scopes>internal_identity_mgt_view</Scopes>
            <Scopes>internal_identity_mgt_update</Scopes>
            <Scopes>internal_identity_mgt_create</Scopes>
            <Scopes>internal_identity_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/user/v1.0/introspect-code(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/identitymgt</Permissions>
            <Scopes>internal_identity_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/user/v1.0/resend-code(.*)" secured="true" http-method="all">
            <Permissions>/permission/admin/manage/identity/identitymgt</Permissions>
            <Scopes>internal_identity_mgt_view</Scopes>
            <Scopes>internal_identity_mgt_update</Scopes>
            <Scopes>internal_identity_mgt_create</Scopes>
            <Scopes>internal_identity_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/user/v1.0/me(.*)" secured="true" http-method="POST"/>
        <Resource context="(.*)/api/identity/user/v1.0/lite(.*)" secured="true" http-method="POST"/>
        <Resource context="(.*)/api/identity/user/v1.0/me(.*)" secured="true" http-method="GET"/>
        <Resource context="(.*)/api/identity/user/v1.0/pi-info" secured="true" http-method="GET">
             <Permissions>/permission/admin/manage/identity/usermgt/view</Permissions>
            <Scopes>internal_user_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/user/v1.0/pi-info/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/usermgt/view</Permissions>
            <Scopes>internal_user_mgt_view</Scopes>
        </Resource>

        <Resource context="(.*)/api/identity/config-mgt/v1.0/search(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/configmgt/list</Permissions>
            <Scopes>internal_config_mgt_list</Scopes>
        </Resource>

        <Resource context="^(?!.*/t/).*/api/identity/config-mgt/v1.0/resource-type" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/configmgt/add</Permissions>
            <Scopes>internal_config_mgt_add</Scopes>
        </Resource>
        <Resource context="^(?!.*/t/).*/api/identity/config-mgt/v1.0/resource-type" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/configmgt/update</Permissions>
            <Scopes>internal_config_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/config-mgt/v1.0/resource-type/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/configmgt/view</Permissions>
            <Scopes>internal_config_mgt_view</Scopes>
        </Resource>
        <Resource context="^(?!.*/t/).*/api/identity/config-mgt/v1.0/resource-type/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/configmgt/delete</Permissions>
            <Scopes>internal_config_mgt_delete</Scopes>
        </Resource>

        <Resource context="(.*)/api/identity/config-mgt/v1.0/resource/(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/configmgt/add</Permissions>
            <Scopes>internal_config_mgt_add</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/config-mgt/v1.0/resource/(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/configmgt/update</Permissions>
            <Scopes>internal_config_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/config-mgt/v1.0/resource/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/configmgt/view</Permissions>
            <Scopes>internal_config_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/config-mgt/v1.0/resource/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/configmgt/delete</Permissions>
            <Scopes>internal_config_mgt_delete</Scopes>
        </Resource>

        <Resource context="(.*)/api/server/v1/notification-senders/(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/configmgt/add</Permissions>
            <Scopes>internal_config_mgt_add</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/notification-senders/(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/configmgt/update</Permissions>
            <Scopes>internal_config_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/notification-senders/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/configmgt/view</Permissions>
            <Scopes>internal_config_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/notification-senders/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/configmgt/delete</Permissions>
            <Scopes>internal_config_mgt_delete</Scopes>
        </Resource>

        <Resource context="(.*)/api/server/v1/secret-type(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/secretmgt/add</Permissions>
            <Scopes>internal_secret_mgt_add</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/secret-type/(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/secretmgt/update</Permissions>
            <Scopes>internal_secret_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/secret-type/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/secretmgt/view</Permissions>
            <Scopes>internal_secret_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/secret-type/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/secretmgt/delete</Permissions>
            <Scopes>internal_secret_mgt_delete</Scopes>
        </Resource>

        <Resource context="(.*)/api/server/v1/secrets/(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/secretmgt/add</Permissions>
            <Scopes>internal_secret_mgt_add</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/secrets/(.*)" secured="true" http-method="PATCH, PUT">
            <Permissions>/permission/admin/manage/identity/secretmgt/update</Permissions>
            <Scopes>internal_secret_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/secrets/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/secretmgt/view</Permissions>
            <Scopes>internal_secret_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/secrets/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/secretmgt/delete</Permissions>
            <Scopes>internal_secret_mgt_delete</Scopes>
        </Resource>

        <Resource context="(.*)/api/server/v1/branding-preference(.*)" secured="false" http-method="GET"/>
        <Resource context="(.*)/api/server/v1/branding-preference(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/applicationmgt/update</Permissions>
            <Scopes>internal_application_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/branding-preference(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/applicationmgt/update</Permissions>
            <Scopes>internal_application_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/branding-preference(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/applicationmgt/update</Permissions>
            <Scopes>internal_application_mgt_update</Scopes>
        </Resource>

        <Resource context="(.*)/api/server/v1/validation-rules(.*)" secured="false" http-method="GET"/>
        <Resource context="(.*)/api/server/v1/validation-rules(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/configmgt/update</Permissions>
            <Scopes>internal_config_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/idv-providers(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/idvp/add</Permissions>
            <Scopes>internal_idvp_add</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/idv-providers(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/idvp/update</Permissions>
            <Scopes>internal_idvp_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/idv-providers(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/idvp/delete</Permissions>
            <Scopes>internal_idvp_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/idv-providers(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/idvp/view</Permissions>
            <Scopes>internal_idvp_view</Scopes>
        </Resource>

        <Resource context="(.*)/api/identity/consent-mgt/v1.0/consents" secured="true" http-method="all"/>
        <Resource context="(.*)/api/identity/consent-mgt/v1.0/consents/receipts/(.*)" secured="true" http-method="all"/>

        <Resource context="(.*)/api/identity/consent-mgt/v1.0/consents/purposes(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/consentmgt/add</Permissions>
            <Scopes>internal_consent_mgt_add</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/consent-mgt/v1.0/consents/purposes(.*)" secured="true" http-method="GET"/>
        <Resource context="(.*)/api/identity/consent-mgt/v1.0/consents/purposes(.+)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/consentmgt/delete</Permissions>
            <Scopes>internal_consent_mgt_delete</Scopes>
        </Resource>

        <Resource context="(.*)/api/identity/consent-mgt/v1.0/consents/pii-categories(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/consentmgt/add</Permissions>
            <Scopes>internal_consent_mgt_add</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/consent-mgt/v1.0/consents/pii-categories(.*)" secured="true" http-method="GET"/>
        <Resource context="(.*)/api/identity/consent-mgt/v1.0/consents/pii-categories(.+)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/consentmgt/delete</Permissions>
            <Scopes>internal_consent_mgt_delete</Scopes>
        </Resource>

        <Resource context="(.*)/api/identity/consent-mgt/v1.0/consents/purpose-categories(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/consentmgt/add</Permissions>
            <Scopes>internal_consent_mgt_add</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/consent-mgt/v1.0/consents/purpose-categories(.*)" secured="true" http-method="GET"/>
        <Resource context="(.*)/api/identity/consent-mgt/v1.0/consents/purpose-categories(.+)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/consentmgt/delete</Permissions>
            <Scopes>internal_consent_mgt_delete</Scopes>
        </Resource>

        <Resource context="(.*)/api/identity/recovery/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/identitymgt</Permissions>
            <Scopes>internal_identity_mgt_view</Scopes>
            <Scopes>internal_identity_mgt_update</Scopes>
            <Scopes>internal_identity_mgt_create</Scopes>
            <Scopes>internal_identity_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/recovery/(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/identitymgt</Permissions>
            <Scopes>internal_identity_mgt_view</Scopes>
            <Scopes>internal_identity_mgt_update</Scopes>
            <Scopes>internal_identity_mgt_create</Scopes>
            <Scopes>internal_identity_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/.well-known/openid-configuration(.*)" secured="false" http-method="all"/>
        <Resource context="/.well-known/webfinger(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/api/identity/oauth2/dcr/(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/applicationmgt/create</Permissions>
            <Scopes>internal_application_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/oauth2/dcr/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/applicationmgt/delete</Permissions>
            <Scopes>internal_application_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/oauth2/dcr/(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/applicationmgt/update</Permissions>
            <Scopes>internal_application_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/oauth2/dcr/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/applicationmgt/view</Permissions>
            <Scopes>internal_application_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/identity/register(.*)" secured="true" http-method="all">
            <Permissions>/permission/admin/manage/identity/applicationmgt/delete</Permissions>
            <Scopes>internal_application_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/identity/connect/register(.*)" secured="true" http-method="all">
            <Permissions>/permission/admin/manage/identity/applicationmgt/create</Permissions>
            <Scopes>internal_application_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/oauth2/introspect(.*)"
                secured="true"
                http-method="all">
            <Permissions>/permission/admin/manage/identity/applicationmgt/view</Permissions>
            <Scopes>internal_application_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/entitlement/(.*)" secured="true" http-method="all">
            <Permissions>/permission/admin/manage/identity/pep</Permissions>
            <Scopes>internal_manage_pep</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Users/.search" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/usermgt/list</Permissions>
            <Scopes>internal_user_mgt_list</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Groups/.search" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/rolemgt/view</Permissions>
            <Scopes>internal_role_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Roles/.search" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/rolemgt/view</Permissions>
            <Scopes>internal_role_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/v2/Roles/.search" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/rolemgt/view</Permissions>
            <Scopes>internal_role_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Users(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/usermgt/create</Permissions>
            <Scopes>internal_user_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Users(/?)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/usermgt/list</Permissions>
            <Scopes>internal_user_mgt_list</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Groups(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/rolemgt/create</Permissions>
            <Scopes>internal_role_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Groups" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/rolemgt/view</Permissions>
            <Scopes>internal_role_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Users/(.+)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/usermgt/view</Permissions>
            <Scopes>internal_user_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Users/(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/usermgt/update</Permissions>
            <Scopes>internal_user_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Users/(.*)" secured="true" http-method="PATCH">
            <Permissions>/permission/admin/manage/identity/usermgt/update</Permissions>
            <Scopes>internal_user_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Users/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/usermgt/delete</Permissions>
            <Scopes>internal_user_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Groups/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/rolemgt/view</Permissions>
            <Scopes>internal_role_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Groups/(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/rolemgt/update</Permissions>
            <Scopes>internal_role_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Groups/(.*)" secured="true" http-method="PATCH">
            <Permissions>/permission/admin/manage/identity/rolemgt/update</Permissions>
            <Scopes>internal_role_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Groups/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/rolemgt/delete</Permissions>
            <Scopes>internal_role_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Roles(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/rolemgt/create</Permissions>
            <Scopes>internal_role_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Roles(.*)" secured="true" http-method="GET">
             <Permissions>/permission/admin/manage/identity/rolemgt/view</Permissions>
             <Scopes>internal_role_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Roles/(.*)" secured="true" http-method="PUT">
              <Permissions>/permission/admin/manage/identity/rolemgt/update</Permissions>
              <Scopes>internal_role_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Roles/(.*)" secured="true" http-method="PATCH">
              <Permissions>/permission/admin/manage/identity/rolemgt/update</Permissions>
              <Scopes>internal_role_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Roles/(.*)" secured="true" http-method="DELETE">
              <Permissions>/permission/admin/manage/identity/rolemgt/delete</Permissions>
              <Scopes>internal_role_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/v2/Roles(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/rolemgt/create</Permissions>
            <Scopes>internal_role_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/v2/Roles(.*)" secured="true" http-method="GET">
             <Permissions>/permission/admin/manage/identity/rolemgt/view</Permissions>
             <Scopes>internal_role_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/v2/Roles/(.*)" secured="true" http-method="PUT">
              <Permissions>/permission/admin/manage/identity/rolemgt/update</Permissions>
              <Scopes>internal_role_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/v2/Roles/(.*)" secured="true" http-method="PATCH">
              <Permissions>/permission/admin/manage/identity/rolemgt/update</Permissions>
              <Scopes>internal_role_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/v2/Roles/(.*)" secured="true" http-method="DELETE">
              <Permissions>/permission/admin/manage/identity/rolemgt/delete</Permissions>
              <Scopes>internal_role_mgt_delete</Scopes>
        </Resource>
        <Resource
                context="(.*)/scim2/Me"
                secured="true"
                http-method="GET">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Me"
                  secured="true"
                  http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/usermgt/delete</Permissions>
            <Scopes>internal_user_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Me"
                  secured="true"
                  http-method="PUT">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Me"
                  secured="true"
                  http-method="PATCH">
            <Permissions>none</Permissions>
           <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/Me"
                  secured="true"
                  http-method="POST">
            <Permissions>/permission/admin/manage/identity/usermgt/create</Permissions>
            <Scopes>internal_user_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/scim2/ServiceProviderConfig" secured="false" http-method="all">
            <Permissions></Permissions>
        </Resource>
        <Resource context="(.*)/scim2/ResourceTypes" secured="false" http-method="all">
            <Permissions></Permissions>
        </Resource>
        <Resource context="(.*)/scim2/Schemas(.*)" secured="true" http-method="all"/>
        <Resource context="(.*)/scim2/Bulk(.*)" secured="true"  http-method="all">
            <Permissions>/permission/admin/manage/identity/usermgt</Permissions>
            <Scopes>internal_user_mgt_create</Scopes>
            <Scopes>internal_user_mgt_view</Scopes>
            <Scopes>internal_user_mgt_list</Scopes>
            <Scopes>internal_user_mgt_delete</Scopes>
        </Resource>

        <Resource context="(.*)/api/identity/auth/v1.1/data(.*)" secured="true" http-method="all"/>
        <Resource context="(.*)/api/identity/auth/v1.1/context(.*)" secured="true" http-method="all"/>
        <Resource context="(.*)/api/identity/auth/v1.1/authenticate(.*)" secured="false" http-method="all"/>

        <Resource context="(.*)/api/identity/user/v1.0/update-username(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/usermgt/update</Permissions>
            <Scopes>internal_user_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/user/v1.0/validate-username(.*)" secured="true" http-method="all"/>

        <Resource context="(.*)/api/identity/oauth2/v1.0/scopes(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/applicationmgt/create</Permissions>
            <Scopes>internal_application_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/oauth2/v1.0/scopes(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/applicationmgt/delete</Permissions>
            <Scopes>internal_application_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/oauth2/v1.0/scopes(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/applicationmgt/update</Permissions>
            <Scopes>internal_application_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/oauth2/v1.0/scopes(.*)" secured="true" http-method="GET, HEAD">
            <Permissions>/permission/admin/manage/identity/applicationmgt/view</Permissions>
            <Scopes>internal_application_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/oauth2/v1.0/(.*)" secured="true" http-method="all"/>

        <Resource context="(.*)/api/users/v1/me/authorized-apps(.*)" secured="true" http-method="GET, DELETE">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v2/me/authorized-apps(.*)" secured="true" http-method="GET, DELETE">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/me/approval-tasks(.*)" secured="true" http-method="GET, HEAD, POST, PUT, DELETE, PATCH">
            <Permissions>/permission/admin/manage/humantask/viewtasks</Permissions>
            <Scopes>internal_humantask_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/me/associations(.*)" secured="true" http-method="GET, POST, DELETE">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/me/federated-associations(.*)" secured="true" http-method="GET, DELETE">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/associations" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/user/association/view</Permissions>
            <Scopes>internal_user_association_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/associations" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/user/association/delete</Permissions>
            <Scopes>internal_user_association_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/federated-associations" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/user/association/view</Permissions>
            <Scopes>internal_user_association_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/federated-associations(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/user/association/delete</Permissions>
            <Scopes>internal_user_association_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/me/challenges" secured="true" http-method="GET">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/me/challenge-answers(.*)" secured="true" http-method="GET, PUT, POST, DELETE">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/challenges(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/identitymgt/view</Permissions>
            <Scopes>internal_identity_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/challenges(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/identitymgt/update</Permissions>
            <Scopes>internal_identity_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/challenges(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/identitymgt/create</Permissions>
            <Scopes>internal_identity_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/challenges(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/identitymgt/delete</Permissions>
            <Scopes>internal_identity_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/challenge-answers(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/identitymgt/view</Permissions>
            <Scopes>internal_identity_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/challenge-answers(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/identitymgt/update</Permissions>
            <Scopes>internal_identity_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/challenge-answers(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/identitymgt/create</Permissions>
            <Scopes>internal_identity_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/challenge-answers(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/identitymgt/delete</Permissions>
            <Scopes>internal_identity_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/me/user-functionality(.*)" secured="true" http-method="GET, PUT">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/user-functionality(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/identitymgt/view</Permissions>
            <Scopes>internal_identity_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/user-functionality(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/identitymgt/update</Permissions>
            <Scopes>internal_identity_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/offline-invite-link(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/usermgt/create</Permissions>
            <Scopes>internal_user_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/claim-dialects(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/claimmgt/metadata/create</Permissions>
            <Scopes>internal_claim_meta_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/claim-dialects(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/claimmgt/metadata/view</Permissions>
            <Scopes>internal_claim_meta_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/claim-dialects/(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/claimmgt/metadata/update</Permissions>
            <Scopes>internal_claim_meta_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/claim-dialects/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/claimmgt/metadata/delete</Permissions>
            <Scopes>internal_claim_meta_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v(.*)/email/template-types(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/emailmgt/view</Permissions>
            <Scopes>internal_email_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v(.*)/email/template-types(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/emailmgt/create</Permissions>
            <Scopes>internal_email_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v(.*)/email/template-types/(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/emailmgt/update</Permissions>
            <Scopes>internal_email_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v(.*)email/template-types/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/emailmgt/delete</Permissions>
            <Scopes>internal_email_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/keystores/certs/public(.*)" secured="false" http-method="GET"/>
        <Resource context="(.*)/api/server/v1/keystores/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/keystoremgt/view</Permissions>
            <Scopes>internal_keystore_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/keystores/certs(.*)" secured="true" http-method="POST, DELETE">
            <Permissions>/permission/admin/manage/identity/keystoremgt/update</Permissions>
            <Scopes>internal_keystore_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/applications/(.*)/owner(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin</Permissions>
            <Scopes>internal_organization_admin</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/applications(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/applicationmgt/create</Permissions>
            <Scopes>internal_application_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/applications(.*)" secured="true" http-method="PUT, PATCH">
            <Permissions>/permission/admin/manage/identity/applicationmgt/update</Permissions>
            <Scopes>internal_application_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/applications(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/applicationmgt/delete</Permissions>
            <Scopes>internal_application_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/applications(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/applicationmgt/view</Permissions>
            <Scopes>internal_application_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/identity-governance/preferences" secured="true" http-method="POST">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/admin-advisory-management/banner" secured="false" http-method="GET">
            <Permissions>none</Permissions>
            <Scopes>none</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/admin-advisory-management/banner" secured="true" http-method="PATCH">
            <Permissions>/permission/admin/manage/identity/configmgt/update</Permissions>
            <Scopes>internal_config_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/identity-governance(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/idpmgt/view</Permissions>
            <Scopes>internal_idp_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/identity-governance/(.*)" secured="true" http-method="PATCH">
            <Permissions>/permission/admin/manage/identity/idpmgt/update</Permissions>
            <Scopes>internal_idp_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/permission-management/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/rolemgt/view</Permissions>
            <Scopes>internal_role_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/userstores(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/userstore/config/create</Permissions>
            <Scopes>internal_userstore_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/userstores(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/userstore/config/view</Permissions>
            <Scopes>internal_userstore_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/userstores(.*)" secured="true" http-method="PUT, PATCH">
            <Permissions>/permission/admin/manage/identity/userstore/config/update</Permissions>
            <Scopes>internal_userstore_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/userstores/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/userstore/config/delete</Permissions>
            <Scopes>internal_userstore_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/userstores/test-connection" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/userstore/config/view</Permissions>
            <Scopes>internal_userstore_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/me/sessions(.*)" secured="true"
                  http-method="all">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/sessions(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/authentication/session/view</Permissions>
            <Scopes>internal_session_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/sessions(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/authentication/session/delete</Permissions>
            <Scopes>internal_session_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/me/applications(.*)" secured="true" http-method="GET">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
       <Resource context="(.*)/api/users/v1/me(.*)" secured="true" http-method="GET, HEAD, POST, PUT, DELETE, PATCH">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/me/idv(.*)" secured="true" http-method="GET, POST, PUT">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/idv(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/user/idv/claim/view</Permissions>
            <Scopes>internal_idv_claim_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/idv(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/user/idv/claim/add</Permissions>
            <Scopes>internal_idv_claim_add</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/idv(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/user/idv/claim/update</Permissions>
            <Scopes>internal_idv_claim_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)/idv/verify" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/user/idv/claim/verify</Permissions>
            <Scopes>internal_idv_claim_verify</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/identity-providers(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/idpmgt/create</Permissions>
            <Scopes>internal_idp_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/identity-providers(.*)" secured="true" http-method="PUT, PATCH">
            <Permissions>/permission/admin/manage/identity/idpmgt/update</Permissions>
            <Scopes>internal_idp_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/identity-providers(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/idpmgt/delete</Permissions>
            <Scopes>internal_idp_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/identity-providers(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/idpmgt/view</Permissions>
            <Scopes>internal_idp_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/authenticators(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/idpmgt/view</Permissions>
            <Scopes>internal_idp_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/script-libraries(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/functionsLibrarymgt/create</Permissions>
            <Scopes>internal_functional_lib_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/script-libraries(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/functionsLibrarymgt/view</Permissions>
            <Scopes>internal_functional_lib_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/script-libraries(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/functionsLibrarymgt//update</Permissions>
            <Scopes>internal_functional_lib_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/script-libraries(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/functionsLibrarymgt/delete</Permissions>
            <Scopes>internal_functional_lib_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/oidc/scopes(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/applicationmgt/create</Permissions>
            <Scopes>internal_application_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/oidc/scopes(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/applicationmgt/delete</Permissions>
            <Scopes>internal_application_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/oidc/scopes(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/applicationmgt/update</Permissions>
            <Scopes>internal_application_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/oidc/scopes(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/applicationmgt/view</Permissions>
            <Scopes>internal_application_mgt_view</Scopes>
        </Resource>
        <Resource context="/api/server/v1/tenants(.*)" secured="true" http-method="GET, POST, HEAD">
            <Permissions>/permission/protected/manage/monitor/tenants/list</Permissions>
            <Scopes>internal_list_tenants</Scopes>
        </Resource>
        <Resource context="/api/server/v1/channel-verified-tenants(.*)" secured="true" http-method="POST">
            <Permissions>/permission/protected/manage/monitor/tenants/list</Permissions>
            <Scopes>internal_list_tenants</Scopes>
         </Resource>
        <Resource context="/api/server/v1/tenants(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/protected/manage/modify/tenants</Permissions>
            <Scopes>internal_modify_tenants</Scopes>
        </Resource>
        <Resource context="/api/server/v1/tenants(.*)/metadata" secured="true" http-method="DELETE">
            <Permissions>/permission/protected/manage/modify/tenants</Permissions>
            <Scopes>internal_modify_tenants</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v2/me/webauthn(.*)" secured="true" http-method="all">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/media/v1.0/user/(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/media/create</Permissions>
            <Scopes>internal_media_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/media/v1.0/me/(.*)" secured="true" http-method="POST"/>
        <Resource context="(.*)/api/identity/media/v1.0/content/(.*)" secured="true" http-method="GET"/>
        <Resource context="(.*)/api/identity/media/v1.0/user/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/media/view</Permissions>
            <Scopes>internal_media_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/media/v1.0/me/(.*)" secured="true" http-method="GET"/>
        <Resource context="(.*)/api/identity/media/v1.0/user/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/media/delete</Permissions>
            <Scopes>internal_media_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/media/v1.0/me/(.*)" secured="true" http-method="DELETE"/>

        <Resource context="(.*)/api/server/v1/cors/origins" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/cors/origins/view</Permissions>
            <Scopes>internal_cors_origins_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/cors/origins/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/cors/origins/view</Permissions>
            <Scopes>internal_cors_origins_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/configs/home-realm-identifiers" secured="true" http-method="GET">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/configs(.*)" secured="true" http-method="GET">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)/roles" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/rolemgt/view</Permissions>
            <Scopes>internal_role_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)/roles/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/rolemgt/view</Permissions>
            <Scopes>internal_role_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)/roles/(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/rolemgt/create</Permissions>
            <Scopes>internal_role_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)/roles/(.*)" secured="true" http-method="PATCH">
            <Permissions>/permission/admin/manage/identity/rolemgt/update</Permissions>
            <Scopes>internal_role_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)/roles/(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/rolemgt/update</Permissions>
            <Scopes>internal_role_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)/roles/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/rolemgt/delete</Permissions>
            <Scopes>internal_role_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)/share" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/applicationmgt/update</Permissions>
            <Scopes>internal_application_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/discovery" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/organizationmgt/update</Permissions>
            <Scopes>internal_organization_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/discovery" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/organizationmgt/view</Permissions>
            <Scopes>internal_organization_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)/discovery" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/organizationmgt/view</Permissions>
            <Scopes>internal_organization_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)/discovery" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/organizationmgt/update</Permissions>
            <Scopes>internal_organization_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)/discovery" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/organizationmgt/delete</Permissions>
            <Scopes>internal_organization_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/check-discovery" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/organizationmgt/view</Permissions>
            <Scopes>internal_organization_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/organizationmgt/view</Permissions>
            <Scopes>internal_organization_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/organizationmgt/view</Permissions>
            <Scopes>internal_organization_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/organizationmgt/create</Permissions>
            <Scopes>internal_organization_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)" secured="true" http-method="PATCH">
            <Permissions>/permission/admin/manage/identity/organizationmgt/update</Permissions>
            <Scopes>internal_organization_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/organizationmgt/update</Permissions>
            <Scopes>internal_organization_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/organizationmgt/delete</Permissions>
            <Scopes>internal_organization_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organization-configs/discovery" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/configmgt/view</Permissions>
            <Scopes>internal_config_mgt_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organization-configs/discovery" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/configmgt/add</Permissions>
            <Scopes>internal_config_mgt_add</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organization-configs/discovery" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/configmgt/delete</Permissions>
            <Scopes>internal_config_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/me/organizations/root" secured="true" http-method="GET">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/self-service/(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/organizationmgt/view</Permissions>
            <Scopes>internal_organization_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/self-service/(.*)" secured="true" http-method="PATCH">
            <Permissions>/permission/admin/manage/identity/organizationmgt/update</Permissions>
            <Scopes>internal_organization_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/guests/invitation/accept" secured="false" http-method="POST"/>
        <Resource context="(.*)/api/server/v1/guests/invite" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/guestmgt/user/invite/add</Permissions>
            <Scopes>internal_guest_mgt_invite_add</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/guests/invitation/introspect" secured="true" http-method="POST">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/guests/invitations(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/guestmgt/user/invite/list</Permissions>
            <Scopes>internal_guest_mgt_invite_list</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/guests/invitations/(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/guestmgt/user/invite/delete</Permissions>
            <Scopes>internal_guest_mgt_invite_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/organizations/check-name" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/organizationmgt/view</Permissions>
            <Scopes>internal_organization_view</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/(?!(tenants|channel-verified-tenants))(.*)" secured="true" http-method="all">
            <Permissions>/permission/admin/manage/identity/</Permissions>
            <Scopes>internal_identity_mgt_view</Scopes>
            <Scopes>internal_identity_mgt_update</Scopes>
            <Scopes>internal_identity_mgt_create</Scopes>
            <Scopes>internal_identity_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v1/(.*)" secured="true" http-method="all">
            <Permissions>/permission/admin/manage/identity</Permissions>
            <Scopes>internal_identity_mgt_view</Scopes>
            <Scopes>internal_identity_mgt_update</Scopes>
            <Scopes>internal_identity_mgt_create</Scopes>
            <Scopes>internal_identity_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/users/v2/(.*)" secured="true" http-method="all">
            <Permissions>/permission/admin/manage/identity</Permissions>
            <Scopes>internal_identity_mgt_view</Scopes>
            <Scopes>internal_identity_mgt_update</Scopes>
            <Scopes>internal_identity_mgt_create</Scopes>
            <Scopes>internal_identity_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/identity/typingdna/v1.0/(.*)" secured="true" http-method="GET, DELETE">
            <Permissions>none</Permissions>
            <Scopes>internal_login</Scopes>
        </Resource>

        <Resource context="(.*)/api/server/v1/actions(.*)" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/identity/actionmgt/create</Permissions>
            <Scopes>internal_action_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/actions(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/identity/actionmgt/update</Permissions>
            <Scopes>internal_action_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/actions(.*)" secured="true" http-method="PATCH">
            <Permissions>/permission/admin/manage/identity/actionmgt/update</Permissions>
            <Scopes>internal_action_mgt_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/actions(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/identity/actionmgt/delete</Permissions>
            <Scopes>internal_action_mgt_delete</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/actions(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/actionmgt/view</Permissions>
            <Scopes>internal_action_mgt_view</Scopes>
        </Resource>

        <Resource context="(.*)/api/server/v1/authenticators/custom" secured="true" http-method="POST">
            <Permissions>/permission/admin/manage/custom_authenticator/create</Permissions>
            <Scopes>internal_custom_authenticator_create</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/authenticators/custom(.*)" secured="true" http-method="PUT">
            <Permissions>/permission/admin/manage/custom_authenticator/update</Permissions>
            <Scopes>internal_custom_authenticator_update</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/authenticators/custom(.*)" secured="true" http-method="DELETE">
            <Permissions>/permission/admin/manage/custom_authenticator/delete</Permissions>
            <Scopes>internal_custom_authenticator_delete</Scopes>
        </Resource>

        <Resource context="/carbon(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/myaccount(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/console(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/commonauth(.*)" secured="false" http-method="all"/>
        <Resource context="/t/(.*)/carbon(.*)" secured="false" http-method="all"/>
        <Resource context="/services(.*)" secured="false" http-method="all"/>
        <Resource context="/t/(.*)/services(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/samlsso(.*)" secured="false" http-method="all"/>
        <Resource context="/acs(.*)" secured="false" http-method="all"/>
        <Resource context="/openidserver(.*)" secured="false" http-method="all"/>
        <Resource context="/openid(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/passivests(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/samlartresolve(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth/request-token(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth/authorize-url(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth/access-token(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth2/token(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth2/authorize(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth2/revoke(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth2/userinfo(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth2/jwks(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth2/device(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth2/device_authorize(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth2/par(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth2/authn(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oidc/checksession(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oidc/logout(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/oauth2/oidcdiscovery(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/wso2/scim/Users(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/wso2/scim/Groups(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/wso2/scim/Bulk(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/authenticationendpoint(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/accountrecoveryendpoint/confirmregistration.do(.*)" secured="false" http-method="GET, POST, HEAD"/>
        <Resource context="(.*)/accountrecoveryendpoint(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/api/health-check/v1(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/emailotpauthenticationendpoint(.*)" secured="false" http-method="all"/>
        <Resource context="/mex(.*)" secured="false" http-method="all"/>
        <Resource context="/mexut(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/smsotpauthenticationendpoint(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/totpauthenticationendpoint(.*)" secured="false" http-method="all"/>
        <Resource context="/x509certificateauthenticationendpoint(.*)" secured="false" http-method="all"/>
        <Resource context="/userandrolemgtservice(.*)" secured="false" http-method="all"/>
        <Resource context="/x509-certificate-servlet(.*)" secured="false" http-method="all"/>
        <Resource context="/mepinauthenticationendpoint(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/identity/cas(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/identity/saml/slo(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/identity/extend-session(.*)" secured="false" http-method="all"/>
        <Resource context="/mobileconnectauthenticationendpoint(.*)" secured="false" http-method="all"/>
        <Resource context="/inweboauthenticationendpoint(.*)" secured="false" http-method="all"/>
        <Resource context="/token2authenticationendpoint(.*)" secured="false" http-method="all"/>
        <Resource context="/duoauthenticationendpoint(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/fileupload/service(.*)" secured="true" http-method="all">
            <Permissions>/permission/admin/manage/identity/applicationmgt/create</Permissions>
            <Scopes>internal_application_mgt_create</Scopes>
        </Resource>
        <Resource context="(.*)/fileupload/entitlement-policy(.*)" secured="true" http-method="all">
            <Permissions>/permission/admin/manage/identity/entitlement/pap/policy/create</Permissions>
            <Scope>internal_manage_pap</Scope>
        </Resource>
        <Resource context="(.*)/fileupload/resource(.*)" secured="true" http-method="all">
            <Permissions>/permission/admin/manage</Permissions>
            <Scopes>internal_registry_resource_upload</Scopes>
        </Resource>
        <Resource context="(.*)/api/idle-account-identification/v1/inactive-users(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/usermgt/list</Permissions>
            <Scopes>internal_user_mgt_list</Scopes>
        </Resource>
        <Resource context="(.*)/api/server/v1/password-expired-users(.*)" secured="true" http-method="GET">
            <Permissions>/permission/admin/manage/identity/usermgt/list</Permissions>
            <Scopes>internal_user_mgt_list</Scopes>
        </Resource>
        <Resource context="(.*)/filedownload(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/logincontext(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/longwaitstatus(.*)" secured="false" http-method="GET"/>
        <Resource context="(.*)/registry/resourceContent(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/registry/resource(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/registry/tags(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/registry/atom(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/tryit/JAXRSRequestXSSproxy_ajaxprocessor.jsp" secured="false" http-method="all"/>
        <Resource context="(.*)/admin/jsp/WSRequestXSSproxy_ajaxprocessor.jsp" secured="false" http-method="all"/>
        <Resource context="^(?!.*/t/).*/api/identity/config-mgt/v1.0/resource-type" secured="true" http-method="POST"/>
        <Resource context="^(?!.*/t/).*/api/identity/config-mgt/v1.0/resource-type" secured="true" http-method="PUT"/>
        <Resource context="(.*)/api/identity/config-mgt/v1.0/resource/(.*)/(.*)" secured="true" http-method="GET"/>
        <Resource context="(.*)/api/identity/config-mgt/v1.0/resource/(.*)/(.*)" secured="true" http-method="DELETE"/>
        <Resource context="(.*)/api/identity/config-mgt/v1.0/resource/(.*)/(.*)" secured="true" http-method="POST"/>
        <Resource context="(.*)/api/identity/config-mgt/v1.0/resource/(.*)/(.*)" secured="true" http-method="PUT"/>
        <Resource context="(.*)/api/identity/config-mgt/v1.0/resource/(.*)/(.*)/(.*)" secured="true" http-method="GET"/>
        <Resource context="(.*)/api/identity/config-mgt/v1.0/resource/(.*)/(.*)/(.*)" secured="true" http-method="DELETE"/>
        <Resource context="(.*)/iwa-kerberos(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/identity/metadata/(.*)" secured="false" http-method="all"/>
        <Resource context="(.*)/api/identity/media/v1.0/public/(.*)" secured="false" http-method="GET"/>
        <Resource context="(.*)/identity/oidc/slo(.*)" secured="false" http-method="POST"/>
        <Resource context="(.*)/.well-known/trusted-apps/android" secured="false" http-method="GET"/>
        <Resource context="(.*)/.well-known/trusted-apps/ios" secured="false" http-method="GET"/>
        <Resource context="(.*)/push-auth/check-status(.*)" secured="false" http-method="GET"/>
        <Resource context="(.*)/push-auth/authenticate" secured="false" http-method="POST"/>
</ResourceAccessControl>

    <ClientAppAuthentication>
        <Application name="dashboard" hash="66cd9688a2ae068244ea01e70f0e230f5623b7fa4cdecb65070a09ec06452262" />
    </ClientAppAuthentication>

    <!--
        The following section defines the endpoints that can be skipped authorization per each authentication handler.
        If none defines for any handler, then this authorization control will be not applied for that.
    -->
    <AuthorizationControl>
            <SkipAuthorization
                authHandler="ClientAuthentication"
                endpoints="(.*)/accountrecoveryendpoint(.*),(.*)/api/identity/recovery/(.*),(.*)/data/AuthRequestKey/(.*),(.*)/applications(.*),(.*)/identity-governance(.*),(.*)/user/(.*)/validate-username(.*),(.*)/consent-mgt/v(.*)/consents/(.*),(.*)/user/v(.*)/me(.*),(.*)/identity/auth/v(.*)/data/(.*),(.*)/identity/user/v(.*)/validate-code,(.*)/api/server/v(.*)/identity-providers(.*),(.*)/api/identity/auth/(.*)/context(.*),(.*)/api/identity/user/v(.*)/resend-code(.*),(.*)/api/users/v2/recovery/password/(.*),(.*)/api/users/v2/recovery/username/(.*),(.*)/api/server/v(.*)/organization-configs/discovery(.*),(.*)/api/server/v(.*)/configs/authenticators(.*)"
            />
    </AuthorizationControl>

    <!--
    This property restricts federated user association done through UserProfileAdmin admin service.
    Would not affect associations done through provisioning
    -->
    <EnableFederatedUserAssociation>false</EnableFederatedUserAssociation>

    <!--
    This property restricts unnecessary user local search during federated authentication flow
    -->
    <SkipLocalUserSearchForAuthenticationFlowHandlers>true</SkipLocalUserSearchForAuthenticationFlowHandlers>

    <TenantContext>
        <TenantQualifiedUrls>
            <Enable>true</Enable>
            <RequireSuperTenantInUrls>false</RequireSuperTenantInUrls>
            <AppendSuperTenantInCookiePath>false</AppendSuperTenantInCookiePath>
            <EnableTenantedSessions>true</EnableTenantedSessions>
       </TenantQualifiedUrls>
    </TenantContext>


    <!--
        When this property is set to 'true', if the username provided during the SaaS application authentication does
        not have a tenant domain appended, the user will be treated as a super tenant user and will be authenticated
        against the super tenant domain.

        When this property is set to 'false', if the username provided during the SaaS application authentication does
        not have a tenant domain appended, the user will be treated as a application tenant domain user and will be
        authenticated against the application tenant domain.
    -->
    <EnableLegacySaaSAuthentication>false</EnableLegacySaaSAuthentication>

    <EnablePerUserFunctionalityLocking>false</EnablePerUserFunctionalityLocking>

    <TenantContextsToRewrite>
        <WebApp>
            <Context>/oauth2/</Context>
            <Context>/scim2/</Context>
            <Context>/api/identity/media/v1.0/</Context>
            <Context>/api/identity/typingdna/v1.0/</Context>
            <Context>/api/</Context>
            <Context>/myaccount/</Context>
            <Context>/console/</Context>
            <Context>/authenticationendpoint/</Context>
            <Context>/accountrecoveryendpoint/</Context>
            <Context>/lsp/</Context>
            <Context>/emailotpauthenticationendpoint/</Context>
            <Context>/smsotpauthenticationendpoint/</Context>
            <Context>/totpauthenticationendpoint/</Context>
        </WebApp>
        <Servlet>
            <Context>/identity/(.*)</Context>
            <Context>/identity/metadata/saml2</Context>
            <Context>/commonauth(.*)</Context>
            <Context>/logincontext(.*)</Context>
            <Context>/oidc/</Context>
            <Context>/samlsso(.*)</Context>
            <Context>/samlartresolve</Context>
            <Context>/passivests</Context>
            <Context>/longwaitstatus(.*)</Context>
            <Context>/push-auth/(.*)</Context>
        </Servlet>
        <OverwriteDispatch>
            <Context>/myaccount/</Context>
            <Context>/console/</Context>
            <IgnorePath>/extensions/</IgnorePath>
            <IgnorePath>/libs/</IgnorePath>
            <IgnorePath>/resources/</IgnorePath>
            <IgnorePath>/static/</IgnorePath>
            <IgnorePath>/deployment.config.json</IgnorePath>
            <IgnorePath>/rpIFrame.html</IgnorePath>
        </OverwriteDispatch>
    </TenantContextsToRewrite>

    <OrgContextsToRewriteInTenantPerspective>
        <WebApp>
            <Context>
                <BasePath>/api/</BasePath>
                <SubPaths>
                    <Path>/api/identity/oauth2/dcr/</Path>
                </SubPaths>
            </Context>
            <Context>
                <BasePath>/oauth2/</BasePath>
                <SubPaths>
                    <Path>/oauth2/token</Path>
                    <Path>/oauth2/introspect</Path>
                    <Path>/oauth2/revoke</Path>
                    <Path>/oauth2/userinfo</Path>
                </SubPaths>
            </Context>
        </WebApp>
    </OrgContextsToRewriteInTenantPerspective>

    <OrgContextsToRewrite>
        <WebApp>
            <Context>
                <BasePath>/api/</BasePath>
                <SubPaths>
                    <Path>/api/server/v1/branding-preference</Path>
                    <Path>/api/server/v1/branding-preference/resolve</Path>
                    <Path>/api/server/v1/branding-preference/text</Path>
                    <Path>/api/server/v1/branding-preference/text/resolve</Path>
                    <Path>/api/identity/auth/v1.1/data</Path>
                    <Path>/api/users/v1/offline-invite-link</Path>
                    <Path>/api/server/v1/validation-rules</Path>
                    <Path>/api/users/v1/me/push/devices</Path>
                </SubPaths>
            </Context>
            <Context>
                <BasePath>/oauth2/</BasePath>
            </Context>
            <Context>
                <BasePath>/authenticationendpoint/</BasePath>
            </Context>
            <Context>
                <BasePath>/accountrecoveryendpoint/</BasePath>
            </Context>
        </WebApp>
        <Servlet>
            <Context>/commonauth(.*)</Context>
            <Context>/logincontext(.*)</Context>
            <Context>/samlsso(.*)</Context>
            <Context>/identity/metadata/saml2</Context>
            <Context>/identity/oidc/slo</Context>
            <Context>/longwaitstatus(.*)</Context>
            <Context>/oidc/</Context>
            <Context>/push-auth/(.*)</Context>
        </Servlet>
    </OrgContextsToRewrite>

    <!-- Server Synchronization Tolerance Configuration in seconds -->
    <ClockSkew>300</ClockSkew>

    <!-- JWT validator configurations -->
    <JWTValidatorConfigs>
        <Enable>true</Enable>
        <EnforceCertificateExpiryTimeValidity>true</EnforceCertificateExpiryTimeValidity>
        <JWKSEndpoint>
            <HTTPConnectionTimeout>1000</HTTPConnectionTimeout>
            <HTTPReadTimeout>1000</HTTPReadTimeout>
            <HTTPSizeLimit>51200</HTTPSizeLimit>
            <HTTPProxy>
                <Enable></Enable>
                <Host></Host>
                <Port></Port>
                <Username></Username>
                <Password></Password>
            </HTTPProxy>
            <!-- Configuration for allowing users to get Previous KID value generated using SHA-1 algo from the JWKS endpoint -->
            <AddPreviousVersionKID>false</AddPreviousVersionKID>
            <IsThumbprintHexifyRequired>false</IsThumbprintHexifyRequired>
            <!-- Configuration for allowing users to enable x5c parameter in JWKS response -->
            <EnableX5CInResponse>true</EnableX5CInResponse>
        </JWKSEndpoint>
    </JWTValidatorConfigs>

    <AdaptiveAuth>
        <!--Default configs for event publisher-->
        <EventPublisher>
            <ReceiverURL></ReceiverURL>
            <BasicAuthentication>
                <Enable></Enable>
                <Username></Username>
                <Password></Password>
            </BasicAuthentication>
        </EventPublisher>
        <!--End of default configs for event publisher-->

        <AsyncSequenceExecutorPoolSize>5</AsyncSequenceExecutorPoolSize>
        <MaxTotalConnections>20</MaxTotalConnections>
        <MaxTotalConnectionsPerRoute>20</MaxTotalConnectionsPerRoute>

        <!--Timeouts in milliseconds-->
        <!--Default configs for timeouts-->
        <HTTPConnectionTimeout>3000</HTTPConnectionTimeout>
        <HTTPReadTimeout>3000</HTTPReadTimeout>
        <HTTPConnectionRequestTimeout>1000</HTTPConnectionRequestTimeout>
        <!--End of default configs for timeouts-->

        <!--Retry counts-->
        <HTTPRequestRetryCount>2</HTTPRequestRetryCount>
        <!--End of retry counts-->

        <!--Timeouts for callChore token call and adaptive endpoint-->
        <CallChoreo>
          <!--Default timeout in milliseconds-->
          <HTTPConnectionTimeout></HTTPConnectionTimeout>
          <HTTPReadTimeout></HTTPReadTimeout>
          <HTTPConnectionRequestTimeout></HTTPConnectionRequestTimeout>
          <!--Default retry counts-->
          <TokenRequestRetryCount>2</TokenRequestRetryCount>
          <ChoreoAPIRequestRetryCount>2</ChoreoAPIRequestRetryCount>
        </CallChoreo>
        <!--End of default configs for callChore timeouts and request retry counts-->

        <RefreshInterval>500</RefreshInterval>
        <!--End of timeouts in milliseconds-->

        <PromptOnLongWait>false</PromptOnLongWait>

        <!--Timeout in milliseconds for the waiting external calls-->
        <LongWaitTimeout>10000</LongWaitTimeout>

        <ExecutionSupervisor>
            <Enable>false</Enable>
            <ThreadCount>1</ThreadCount>
            <Timeout>500</Timeout>
        </ExecutionSupervisor>

        <HTTPFunctionAllowedDomains>
            <Domain>example.com</Domain>
            <Domain>api.example.org</Domain>
            <Domain>7436ebec-15d2-4917-8942-de4cbdfb4fff.mock.pstmn.io</Domain>
            <Domain>localhost:4000</Domain>
            <Domain>https://7436ebec-15d2-4917-8942-de4cbdfb4fff.mock.pstmn.io</Domain>
            <Domain>https://7436ebec-15d2-4917-8942-de4cbdfb4fff.mock.pstmn.io/api/authenticate</Domain>
            <Domain>http://localhost:4000</Domain>
        </HTTPFunctionAllowedDomains>


        <!--Default configs for Choreo token endpoint-->
        <ChoreoTokenEndpoint>https://sts.choreo.dev/oauth2/token</ChoreoTokenEndpoint>

        <!--Whether to use authenticator name or display name in authenticationOptions-->
        <AuthenticatorNameInAuthConfig>
            <Enable>true</Enable>
        </AuthenticatorNameInAuthConfig>

        <!--Number of statements that can be run with GraalJS script engine on one execution-->
        <GraalJS>
            <ScriptStatementsLimit>0</ScriptStatementsLimit>
        </GraalJS>
    </AdaptiveAuth>

    <!--Intermediate certificate validation for certificate based requests-->
    <IntermediateCertValidation enable="false">
        <IntermediateCerts>
            <!--Add intermediate certificate CN. Multiple <CertCN> elements can be used for multiple certificates.-->
            <CertCN>localhost</CertCN>
        </IntermediateCerts>
        <ExemptContext>
            <!--Add exemptable context paths. Multiple <Context> elements can be used for multiple contexts.-->
        </ExemptContext>
    </IntermediateCertValidation>

    <!--This is the separator that use to separate multiple roles in the role claim value coming from IDP side-->
    <FederatedIDPRoleClaimValueAttributeSeparator>,</FederatedIDPRoleClaimValueAttributeSeparator>




    <!--This configuration is used for X509 Certificate based authentication. -->

    <X509>
        <!--During ssl termination at LB, the X509 certificate is passed over the HTTP header. This configuration
        provides the facility to configure HTTP request header name which is configured at LB.  -->
        <X509RequestHeaderName>X-SSL-CERT</X509RequestHeaderName>
        <CRLDownloadTimeout>60000</CRLDownloadTimeout>
    </X509>

    <!-- This configuration specifies the claims that should be logged to "audit.log" upon changes. -->

     <!-- This configuration specifies enabling contextual param for audit logs. -->
     <LoggableContextualParams>
     </LoggableContextualParams>

    <!--Configuration Store properties-->
    <ConfigurationStore>
        <!--Set an upper limit to the database call queries. Configuration store uses dynamic query generation,
        specially for searching resources. This property will prevent any unwanted errors due to too large queries.
        Default value is the maximum packet size for MySQL 5.7 in bytes.-->
        <MaximumQueryLength>4194304</MaximumQueryLength>
        <AllowCrossTenantSearch>false</AllowCrossTenantSearch>
    </ConfigurationStore>

    <FIDO>
        <WebAuthn>
            <Enable>true</Enable>
        </WebAuthn>
        <EnablePasskeyProgressiveEnrollment>false</EnablePasskeyProgressiveEnrollment>
        <EnableUsernamelessAuthentication>true</EnableUsernamelessAuthentication>
        <FIDO2TrustedOrigins>
            <Origin>${carbon.protocol}://${carbon.host}:${carbon.management.port}</Origin>
        </FIDO2TrustedOrigins>

        <!--
            Time allocated for the users to authenticate.
            Time configurations are in milliseconds.
        -->
        <UserResponseTimeout>300000</UserResponseTimeout>

        <!-- FIDO2 metadata service related configurations -->
        <MetadataService>
            <Enable>false</Enable>
            <MDSEndpoints>
            </MDSEndpoints>
            <MDSRootCertificateFilePath>${carbon.home}/repository/resources/identity/fido2/security/MDS3ROOT.crt</MDSRootCertificateFilePath>
            <MetadataStatementDirectory>${carbon.home}/repository/resources/identity/fido2/metadataStatements</MetadataStatementDirectory>
            <SchedulerInitialDelay>0</SchedulerInitialDelay>
        </MetadataService>
    </FIDO>

    <MaximumItemsPerPage>100</MaximumItemsPerPage>
    <DefaultItemsPerPage>15</DefaultItemsPerPage>
    <MaximumUsersListPerRole>1000</MaximumUsersListPerRole>

    <UserFiltering>
        <ShowDisplayName>false</ShowDisplayName>
    </UserFiltering>

    <!-- Allowed Userstores -->
    <AllowedUserstores>
        <AllowedUserstore>org.wso2.carbon.user.core.jdbc.UniqueIDJDBCUserStoreManager</AllowedUserstore>
        <AllowedUserstore>org.wso2.carbon.user.core.ldap.UniqueIDActiveDirectoryUserStoreManager</AllowedUserstore>
        <AllowedUserstore>org.wso2.carbon.user.core.ldap.UniqueIDReadOnlyLDAPUserStoreManager</AllowedUserstore>
        <AllowedUserstore>org.wso2.carbon.user.core.ldap.UniqueIDReadWriteLDAPUserStoreManager</AllowedUserstore>
    </AllowedUserstores>

    <ReservedUserstores>
        <ReservedUserstore>PRIMARY</ReservedUserstore>
        <ReservedUserstore>INTERNAL</ReservedUserstore>
        <ReservedUserstore>APPLICATION</ReservedUserstore>
    </ReservedUserstores>

    <!-- System Applications -->
    <SystemApplications>
        <ApplicationName>Console</ApplicationName>
    </SystemApplications>

    <!-- Default Applications -->
    <DefaultApplications>
        <ApplicationName>Console</ApplicationName>
        <ApplicationName>My Account</ApplicationName>
    </DefaultApplications>

    <!-- System Portals -->
    <SystemPortals>
        <PortalName>Console</PortalName>
        <PortalName>My Account</PortalName>
    </SystemPortals>

    <!-- System Roles -->

    <MutualTLS>
        <ClientCertificateHeader></ClientCertificateHeader>
    </MutualTLS>

    <!-- Configuration for allowing an uninterrupted token building flow upon facing claim handling errors. -->
    <ContinueOnClaimHandlingError>true</ContinueOnClaimHandlingError>

    <!--Disallowed characters regEx property-->

    <!-- CORS -->
    <CORS>
        <AllowGenericHttpRequests>true</AllowGenericHttpRequests>
        <AllowAnyOrigin>false</AllowAnyOrigin>
        <AllowedOrigins>
        </AllowedOrigins>
        <AllowSubdomains>false</AllowSubdomains>
        <SupportedMethods>
            <Method>GET</Method>
            <Method>POST</Method>
            <Method>PUT</Method>
            <Method>PATCH</Method>
            <Method>DELETE</Method>
            <Method>HEAD</Method>
            <Method>OPTIONS</Method>
        </SupportedMethods>
        <SupportAnyHeader>true</SupportAnyHeader>
        <SupportedHeaders>
        </SupportedHeaders>
        <ExposedHeaders>
        </ExposedHeaders>
        <SupportsCredentials>true</SupportsCredentials>
        <MaxAge>-1.0</MaxAge>
        <TagRequests>false</TagRequests>
    </CORS>

    <LegacyFeatures>
        <LegacyFeature>
            <Id>oauth</Id>
            <Version>1.0</Version>
            <Enable>false</Enable>
        </LegacyFeature>
        <LegacyFeature>
            <Id>identity/connect/dcr</Id>
            <Version></Version>
            <Enable>false</Enable>
        </LegacyFeature>
    </LegacyFeatures>


    <!-- Configuration for preserving the current session and token when updating the password. -->
    <PasswordUpdate>
        <PreserveLoggedInSession>false</PreserveLoggedInSession>
    </PasswordUpdate>

    <EmailTemplatePlaceholders>
    </EmailTemplatePlaceholders>

    <CommonAuthCallerPath>
        <EnableValidation>true</EnableValidation>
    </CommonAuthCallerPath>

    <!-- Cookies to invalidate during authentication flow failures. -->
    <CookiesToInvalidate>
        	<Cookie name="commonAuthId"/>
        	<Cookie name="opbs"/>
        	<Cookie name="pastr"/>
        	<Cookie name="sessionNonceCookie"/>
        	<Cookie name="ALOR"/>
    </CookiesToInvalidate>

    <!-- Claim to store localization code  -->
    <!--    By setting true localization code will be stored inside the http://wso2.org/claims/locality-->
    <!--    By setting false localization code will be stored inside the http://wso2.org/claims/local-->

    <UseLegacyLocalizationClaim>false</UseLegacyLocalizationClaim>

    <!-- Configuration to enable or disable claim filtering based on scope. -->
    <EnableScopeBasedClaimFiltering>true</EnableScopeBasedClaimFiltering>

    <!-- Configuration to allow only SP requested claims during federated flow. -->
    <AllowSPRequestedFedClaimsOnly>true</AllowSPRequestedFedClaimsOnly>



    <!-- Configuration to show the pending user information during the authentication failure attempts. -->
    <ShowPendingUserInformation>true</ShowPendingUserInformation>

    <!-- Configuration to enable the organization level branding of email templates. -->
    <EnableOrganizationLevelEmailBranding>true</EnableOrganizationLevelEmailBranding>

    <!-- Configuration to set up fallback configs for organization level branding configs   -->
    <!-- to be used in the case where branding configs are not defined by the tenant users. -->
    <OrganizationLevelEmailBrandingFallbacks>
            <OrganizationLevelEmailBrandingFallback key="light_background_color">#FFFFFF</OrganizationLevelEmailBrandingFallback>
            <OrganizationLevelEmailBrandingFallback key="light_border_color">transparent</OrganizationLevelEmailBrandingFallback>
            <OrganizationLevelEmailBrandingFallback key="primary_color">#FF7300</OrganizationLevelEmailBrandingFallback>
            <OrganizationLevelEmailBrandingFallback key="button_font_color">#FFFFFF</OrganizationLevelEmailBrandingFallback>
            <OrganizationLevelEmailBrandingFallback key="font_style">Gilmer</OrganizationLevelEmailBrandingFallback>
            <OrganizationLevelEmailBrandingFallback key="dark_border_color">#333333</OrganizationLevelEmailBrandingFallback>
            <OrganizationLevelEmailBrandingFallback key="copyright_text">WSO2 Identity Server</OrganizationLevelEmailBrandingFallback>
            <OrganizationLevelEmailBrandingFallback key="dark_background_color">#111111</OrganizationLevelEmailBrandingFallback>
            <OrganizationLevelEmailBrandingFallback key="background_color">#F8F9FA</OrganizationLevelEmailBrandingFallback>
            <OrganizationLevelEmailBrandingFallback key="font_color">#231F20</OrganizationLevelEmailBrandingFallback>
    </OrganizationLevelEmailBrandingFallbacks>

    <!-- Configuration to enable SHA256 in IdentityUtil-->
    <IdentityUtil>
        <EnableSHA256>true</EnableSHA256>
    </IdentityUtil>

    <CertThumbprint>
        <EnableSHA256>true</EnableSHA256>
    </CertThumbprint>

    <!--
        These configurations are deprecated from this file and moved to organization-mgt.xml file.
        The configuration reading will happen from the organization-mgt.xml file and the deployment.toml
        configurations will remain the same.
    -->
    <OrganizationUserInvitation>
        <DefaultExpiryTime>4320</DefaultExpiryTime>
        <PrimaryUserDomain>PRIMARY</PrimaryUserDomain>
        <DefaultAcceptURL>/accountrecoveryendpoint/acceptinvitation.do</DefaultAcceptURL>
        <AssociationWaitTime>5000</AssociationWaitTime>
    </OrganizationUserInvitation>

    <!-- Extension management service configurations -->
    <ExtensionManagementService>
        <ExtensionTypes>applications,connections,identity-verification-providers,notification-providers</ExtensionTypes>
    </ExtensionManagementService>

    <!-- IdentityDataStore configurations -->
    <IdentityDataStore>
        <DataStoreType>org.wso2.carbon.identity.governance.store.JDBCIdentityDataStore</DataStoreType>
    </IdentityDataStore>

    <UserProfileExport>
        <AdditionalClaims>
        </AdditionalClaims>
        <RestrictedClaims>
        </RestrictedClaims>
    </UserProfileExport>

    <EnableBasicAuthHandler>true</EnableBasicAuthHandler>
    <InputValidation>
        <Username>
       		<Enabled>false</Enabled>
        </Username>
    </InputValidation>

    <!-- Console Application configurations -->
    <Console>
        <CallbackURL></CallbackURL>
        <AccessURL></AccessURL>
        <AppBaseName>console</AppBaseName>
        <Origin></Origin>
    </Console>

    <!-- MyAccount Application configurations -->
    <MyAccount>
        <CallbackURL></CallbackURL>
        <AccessURL></AccessURL>
        <AppBaseName>myaccount</AppBaseName>
        <Origin></Origin>
    </MyAccount>

    <!-- Configuration settings for the API responses. -->
    <APIResponse>
        <!-- When set to true, this enables sending a specific authentication failure message in the API response
         when an account is locked. -->
        <SetAccountLockAuthFailureReason>false</SetAccountLockAuthFailureReason>
    </APIResponse>

    <SuperTenantAliasInPublicUrl></SuperTenantAliasInPublicUrl>



    <OnDemandConfig>
        <OnInitialUse>
            <EnableSMSOTPPasswordRecoveryIfConnectorEnabled>false</EnableSMSOTPPasswordRecoveryIfConnectorEnabled>
            <EnableSMSUsernameRecoveryIfConnectorEnabled>false</EnableSMSUsernameRecoveryIfConnectorEnabled>
        </OnInitialUse>
    </OnDemandConfig>

    <AdminServices>
    </AdminServices>

    <AIServices>
        <TokenEndpoint>https://api.asgardeo.io/t/wso2devtools/oauth2/token</TokenEndpoint>
        <Key></Key>
        <TokenRequestRetryCount></TokenRequestRetryCount>
        <TokenConnectionTimeout></TokenConnectionTimeout>
        <TokenConnectionRequestTimeout></TokenConnectionRequestTimeout>
        <TokenConnectionSocketTimeout></TokenConnectionSocketTimeout>
        <HTTPConnectionPoolSize></HTTPConnectionPoolSize>
        <HTTPConnectionTimeout></HTTPConnectionTimeout>
        <HTTPConnectionRequestTimeout></HTTPConnectionRequestTimeout>
        <HTTPSocketTimeout></HTTPSocketTimeout>
        <LoginFlowAI>
            <LoginFlowAIEndpoint>https://e95488c8-8511-4882-967f-ec3ae2a0f86f-prod.e1-us-east-azure.choreoapis.dev/iam-ai-us/loginflow-ai/v1.0</LoginFlowAIEndpoint>
            <LoginFlowAIGenerateRequestPath>/api/server/v1/applications/loginflow/generate</LoginFlowAIGenerateRequestPath>
            <LoginFlowAIStatusRequestPath>/api/server/v1/applications/loginflow/status</LoginFlowAIStatusRequestPath>
            <LoginFlowAIResultRequestPath>/api/server/v1/applications/loginflow/result</LoginFlowAIResultRequestPath>
        </LoginFlowAI>
        <BrandingAI>
            <BrandingAIEndpoint>https://e95488c8-8511-4882-967f-ec3ae2a0f86f-prod.e1-us-east-azure.choreoapis.dev/iam-ai-us/branding-ai/v1.0</BrandingAIEndpoint>
            <BrandingAIGenerateRequestPath>/api/server/v1/branding-preference/generate</BrandingAIGenerateRequestPath>
            <BrandingAIStatusRequestPath>/api/server/v1/branding-preference/status</BrandingAIStatusRequestPath>
            <BrandingAIResultRequestPath>/api/server/v1/branding-preference/result</BrandingAIResultRequestPath>
        </BrandingAI>
    </AIServices>

</Server>
