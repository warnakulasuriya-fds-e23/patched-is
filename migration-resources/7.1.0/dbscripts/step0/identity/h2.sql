CREATE TABLE IF NOT EXISTS MIGRATION_STATUS (
    IS_VERSION VARCHAR(255) NOT NULL,
    STATUS VARCHAR(255),
    LOCKED_BY VARCHAR(255),
    LOCK_ACQUIRED_AT TIMESTAMP,
    EXPIRES_AT TIMESTAMP,
    PRIMARY KEY (IS_VERSION)
);

CREATE TABLE IF NOT EXISTS MIGRATOR_PROGRESS (
    IS_VERSION VARCHAR(255) NOT NULL,
    STATUS VARCHAR(255),
    CURRENT_MIGRATOR VARCHAR(255),
    CURRENT_TENANT VARCHAR(255),
    LAST_COMPLETED_MIGRATOR VARCHAR(255),
    LAST_COMPLETED_TENANT VARCHAR(255),
    PRIMARY KEY (IS_VERSION)
);

INSERT INTO MIGRATION_STATUS(IS_VERSION, LOCKED_BY, STATUS, LOCK_ACQUIRED_AT, EXPIRES_AT)
SELECT IS_VERSION, LOCKED_BY, STATUS, LOCK_ACQUIRED_AT, EXPIRES_AT FROM (
	SELECT
	    '7.1.0' AS IS_VERSION,
	    NULL AS LOCKED_BY,
	    'NOT-STARTED' AS STATUS,
	    NULL AS LOCK_ACQUIRED_AT,
	    NULL AS EXPIRES_AT
) TEMP
WHERE NOT EXISTS (SELECT * FROM MIGRATION_STATUS MS WHERE MS.IS_VERSION = TEMP.IS_VERSION);

INSERT INTO MIGRATOR_PROGRESS(IS_VERSION, STATUS, CURRENT_MIGRATOR, CURRENT_TENANT, LAST_COMPLETED_MIGRATOR, LAST_COMPLETED_TENANT)
SELECT IS_VERSION, STATUS, CURRENT_MIGRATOR, CURRENT_TENANT, LAST_COMPLETED_MIGRATOR, LAST_COMPLETED_TENANT FROM (
	SELECT
	    '7.1.0' AS IS_VERSION,
	    'NOT-STARTED' AS STATUS,
	    NULL AS CURRENT_MIGRATOR,
	    NULL AS CURRENT_TENANT,
	    NULL AS LAST_COMPLETED_MIGRATOR,
	    NULL AS LAST_COMPLETED_TENANT
) TEMP
WHERE NOT EXISTS (SELECT * FROM MIGRATOR_PROGRESS MP WHERE MP.IS_VERSION = TEMP.IS_VERSION);
